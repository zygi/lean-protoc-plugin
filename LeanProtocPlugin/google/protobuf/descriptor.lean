-- Generated by the Lean protobuf compiler. Do not edit manually.
-- source: google/protobuf/descriptor.proto

import LeanProto
import Std.Data.AssocList
import Lean.Elab.Deriving.InhabitedMut

open Std

set_option maxHeartbeats 10000000
set_option genSizeOfSpec false
namespace google
namespace protobuf







inductive FieldDescriptorProto_Type where
| TYPE_DOUBLE : FieldDescriptorProto_Type
| TYPE_FLOAT : FieldDescriptorProto_Type
| TYPE_INT64 : FieldDescriptorProto_Type
| TYPE_UINT64 : FieldDescriptorProto_Type
| TYPE_INT32 : FieldDescriptorProto_Type
| TYPE_FIXED64 : FieldDescriptorProto_Type
| TYPE_FIXED32 : FieldDescriptorProto_Type
| TYPE_BOOL : FieldDescriptorProto_Type
| TYPE_STRING : FieldDescriptorProto_Type
| TYPE_GROUP : FieldDescriptorProto_Type
| TYPE_MESSAGE : FieldDescriptorProto_Type
| TYPE_BYTES : FieldDescriptorProto_Type
| TYPE_UINT32 : FieldDescriptorProto_Type
| TYPE_ENUM : FieldDescriptorProto_Type
| TYPE_SFIXED32 : FieldDescriptorProto_Type
| TYPE_SFIXED64 : FieldDescriptorProto_Type
| TYPE_SINT32 : FieldDescriptorProto_Type
| TYPE_SINT64 : FieldDescriptorProto_Type
deriving Inhabited, BEq, Repr

instance : LeanProto.ProtoEnum FieldDescriptorProto_Type where
  toInt
  | FieldDescriptorProto_Type.TYPE_DOUBLE => 1
  | FieldDescriptorProto_Type.TYPE_FLOAT => 2
  | FieldDescriptorProto_Type.TYPE_INT64 => 3
  | FieldDescriptorProto_Type.TYPE_UINT64 => 4
  | FieldDescriptorProto_Type.TYPE_INT32 => 5
  | FieldDescriptorProto_Type.TYPE_FIXED64 => 6
  | FieldDescriptorProto_Type.TYPE_FIXED32 => 7
  | FieldDescriptorProto_Type.TYPE_BOOL => 8
  | FieldDescriptorProto_Type.TYPE_STRING => 9
  | FieldDescriptorProto_Type.TYPE_GROUP => 10
  | FieldDescriptorProto_Type.TYPE_MESSAGE => 11
  | FieldDescriptorProto_Type.TYPE_BYTES => 12
  | FieldDescriptorProto_Type.TYPE_UINT32 => 13
  | FieldDescriptorProto_Type.TYPE_ENUM => 14
  | FieldDescriptorProto_Type.TYPE_SFIXED32 => 15
  | FieldDescriptorProto_Type.TYPE_SFIXED64 => 16
  | FieldDescriptorProto_Type.TYPE_SINT32 => 17
  | FieldDescriptorProto_Type.TYPE_SINT64 => 18

  ofInt
  | 1 => FieldDescriptorProto_Type.TYPE_DOUBLE
  | 2 => FieldDescriptorProto_Type.TYPE_FLOAT
  | 3 => FieldDescriptorProto_Type.TYPE_INT64
  | 4 => FieldDescriptorProto_Type.TYPE_UINT64
  | 5 => FieldDescriptorProto_Type.TYPE_INT32
  | 6 => FieldDescriptorProto_Type.TYPE_FIXED64
  | 7 => FieldDescriptorProto_Type.TYPE_FIXED32
  | 8 => FieldDescriptorProto_Type.TYPE_BOOL
  | 9 => FieldDescriptorProto_Type.TYPE_STRING
  | 10 => FieldDescriptorProto_Type.TYPE_GROUP
  | 11 => FieldDescriptorProto_Type.TYPE_MESSAGE
  | 12 => FieldDescriptorProto_Type.TYPE_BYTES
  | 13 => FieldDescriptorProto_Type.TYPE_UINT32
  | 14 => FieldDescriptorProto_Type.TYPE_ENUM
  | 15 => FieldDescriptorProto_Type.TYPE_SFIXED32
  | 16 => FieldDescriptorProto_Type.TYPE_SFIXED64
  | 17 => FieldDescriptorProto_Type.TYPE_SINT32
  | 18 => FieldDescriptorProto_Type.TYPE_SINT64
  | _ => none


inductive FieldDescriptorProto_Label where
| LABEL_OPTIONAL : FieldDescriptorProto_Label
| LABEL_REQUIRED : FieldDescriptorProto_Label
| LABEL_REPEATED : FieldDescriptorProto_Label
deriving Inhabited, BEq, Repr

instance : LeanProto.ProtoEnum FieldDescriptorProto_Label where
  toInt
  | FieldDescriptorProto_Label.LABEL_OPTIONAL => 1
  | FieldDescriptorProto_Label.LABEL_REQUIRED => 2
  | FieldDescriptorProto_Label.LABEL_REPEATED => 3

  ofInt
  | 1 => FieldDescriptorProto_Label.LABEL_OPTIONAL
  | 2 => FieldDescriptorProto_Label.LABEL_REQUIRED
  | 3 => FieldDescriptorProto_Label.LABEL_REPEATED
  | _ => none









inductive FileOptions_OptimizeMode where
| SPEED : FileOptions_OptimizeMode
| CODE_SIZE : FileOptions_OptimizeMode
| LITE_RUNTIME : FileOptions_OptimizeMode
deriving Inhabited, BEq, Repr

instance : LeanProto.ProtoEnum FileOptions_OptimizeMode where
  toInt
  | FileOptions_OptimizeMode.SPEED => 1
  | FileOptions_OptimizeMode.CODE_SIZE => 2
  | FileOptions_OptimizeMode.LITE_RUNTIME => 3

  ofInt
  | 1 => FileOptions_OptimizeMode.SPEED
  | 2 => FileOptions_OptimizeMode.CODE_SIZE
  | 3 => FileOptions_OptimizeMode.LITE_RUNTIME
  | _ => none




inductive FieldOptions_CType where
| STRING : FieldOptions_CType
| CORD : FieldOptions_CType
| STRING_PIECE : FieldOptions_CType
deriving Inhabited, BEq, Repr

instance : LeanProto.ProtoEnum FieldOptions_CType where
  toInt
  | FieldOptions_CType.STRING => 0
  | FieldOptions_CType.CORD => 1
  | FieldOptions_CType.STRING_PIECE => 2

  ofInt
  | 0 => FieldOptions_CType.STRING
  | 1 => FieldOptions_CType.CORD
  | 2 => FieldOptions_CType.STRING_PIECE
  | _ => none


inductive FieldOptions_JSType where
| JS_NORMAL : FieldOptions_JSType
| JS_STRING : FieldOptions_JSType
| JS_NUMBER : FieldOptions_JSType
deriving Inhabited, BEq, Repr

instance : LeanProto.ProtoEnum FieldOptions_JSType where
  toInt
  | FieldOptions_JSType.JS_NORMAL => 0
  | FieldOptions_JSType.JS_STRING => 1
  | FieldOptions_JSType.JS_NUMBER => 2

  ofInt
  | 0 => FieldOptions_JSType.JS_NORMAL
  | 1 => FieldOptions_JSType.JS_STRING
  | 2 => FieldOptions_JSType.JS_NUMBER
  | _ => none







inductive MethodOptions_IdempotencyLevel where
| IDEMPOTENCY_UNKNOWN : MethodOptions_IdempotencyLevel
| NO_SIDE_EFFECTS : MethodOptions_IdempotencyLevel
| IDEMPOTENT : MethodOptions_IdempotencyLevel
deriving Inhabited, BEq, Repr

instance : LeanProto.ProtoEnum MethodOptions_IdempotencyLevel where
  toInt
  | MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN => 0
  | MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS => 1
  | MethodOptions_IdempotencyLevel.IDEMPOTENT => 2

  ofInt
  | 0 => MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN
  | 1 => MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS
  | 2 => MethodOptions_IdempotencyLevel.IDEMPOTENT
  | _ => none









#eval "Starting..."

mutual
inductive FileDescriptorSet where
| mk
  (file : (Array (FileDescriptorProto)))
    : FileDescriptorSet

inductive FileDescriptorProto where
| mk
  (name : (Option (String)))
  (package : (Option (String)))
  (dependency : (Array (String)))
  (publicDependency : (Array (Int)))
  (weakDependency : (Array (Int)))
  (messageType : (Array (DescriptorProto)))
  (enumType : (Array (EnumDescriptorProto)))
  (service : (Array (ServiceDescriptorProto)))
  (extension : (Array (FieldDescriptorProto)))
  (options : (Option (FileOptions)))
  (sourceCodeInfo : (Option (SourceCodeInfo)))
  (syntaxx : (Option (String)))
    : FileDescriptorProto

inductive DescriptorProto_ExtensionRange where
| mk
  (start : (Option (Int)))
  (endd : (Option (Int)))
  (options : (Option (ExtensionRangeOptions)))
    : DescriptorProto_ExtensionRange

inductive DescriptorProto_ReservedRange where
| mk
  (start : (Option (Int)))
  (endd : (Option (Int)))
    : DescriptorProto_ReservedRange

inductive DescriptorProto where
| mk
  (name : (Option (String)))
  (field : (Array (FieldDescriptorProto)))
  (extension : (Array (FieldDescriptorProto)))
  (nestedType : (Array (DescriptorProto)))
  (enumType : (Array (EnumDescriptorProto)))
  (extensionRange : (Array (DescriptorProto_ExtensionRange)))
  (oneofDecl : (Array (OneofDescriptorProto)))
  (options : (Option (MessageOptions)))
  (reservedRange : (Array (DescriptorProto_ReservedRange)))
  (reservedName : (Array (String)))
    : DescriptorProto

inductive ExtensionRangeOptions where
| mk
  (uninterpretedOption : (Array (UninterpretedOption)))
    : ExtensionRangeOptions

inductive FieldDescriptorProto where
| mk
  (name : (Option (String)))
  (number : (Option (Int)))
  (label : (Option (FieldDescriptorProto_Label)))
  (type : (Option (FieldDescriptorProto_Type)))
  (typeName : (Option (String)))
  (extendee : (Option (String)))
  (defaultValue : (Option (String)))
  (oneofIndex : (Option (Int)))
  (jsonName : (Option (String)))
  (options : (Option (FieldOptions)))
  (proto3Optional : (Option (Bool)))
    : FieldDescriptorProto

inductive OneofDescriptorProto where
| mk
  (name : (Option (String)))
  (options : (Option (OneofOptions)))
    : OneofDescriptorProto

inductive EnumDescriptorProto_EnumReservedRange where
| mk
  (start : (Option (Int)))
  (endd : (Option (Int)))
    : EnumDescriptorProto_EnumReservedRange

inductive EnumDescriptorProto where
| mk
  (name : (Option (String)))
  (value : (Array (EnumValueDescriptorProto)))
  (options : (Option (EnumOptions)))
  (reservedRange : (Array (EnumDescriptorProto_EnumReservedRange)))
  (reservedName : (Array (String)))
    : EnumDescriptorProto

inductive EnumValueDescriptorProto where
| mk
  (name : (Option (String)))
  (number : (Option (Int)))
  (options : (Option (EnumValueOptions)))
    : EnumValueDescriptorProto

inductive ServiceDescriptorProto where
| mk
  (name : (Option (String)))
  (method : (Array (MethodDescriptorProto)))
  (options : (Option (ServiceOptions)))
    : ServiceDescriptorProto

inductive MethodDescriptorProto where
| mk
  (name : (Option (String)))
  (inputType : (Option (String)))
  (outputType : (Option (String)))
  (options : (Option (MethodOptions)))
  (clientStreaming : (Option (Bool)))
  (serverStreaming : (Option (Bool)))
    : MethodDescriptorProto

inductive FileOptions where
| mk
  (javaPackage : (Option (String)))
  (javaOuterClassname : (Option (String)))
  (javaMultipleFiles : (Option (Bool)))
  (javaGenerateEqualsAndHash : (Option (Bool)))
  (javaStringCheckUtf8 : (Option (Bool)))
  (optimizeFor : (Option (FileOptions_OptimizeMode)))
  (goPackage : (Option (String)))
  (ccGenericServices : (Option (Bool)))
  (javaGenericServices : (Option (Bool)))
  (pyGenericServices : (Option (Bool)))
  (phpGenericServices : (Option (Bool)))
  (deprecated : (Option (Bool)))
  (ccEnableArenas : (Option (Bool)))
  (objcClassPrefix : (Option (String)))
  (csharpNamespace : (Option (String)))
  (swiftPrefix : (Option (String)))
  (phpClassPrefix : (Option (String)))
  (phpNamespace : (Option (String)))
  (phpMetadataNamespace : (Option (String)))
  (rubyPackage : (Option (String)))
  (uninterpretedOption : (Array (UninterpretedOption)))
    : FileOptions

inductive MessageOptions where
| mk
  (messageSetWireFormat : (Option (Bool)))
  (noStandardDescriptorAccessor : (Option (Bool)))
  (deprecated : (Option (Bool)))
  (mapEntry : (Option (Bool)))
  (uninterpretedOption : (Array (UninterpretedOption)))
    : MessageOptions

inductive FieldOptions where
| mk
  (ctype : (Option (FieldOptions_CType)))
  (packed : (Option (Bool)))
  (jstype : (Option (FieldOptions_JSType)))
  (lazy : (Option (Bool)))
  (deprecated : (Option (Bool)))
  (weak : (Option (Bool)))
  (uninterpretedOption : (Array (UninterpretedOption)))
    : FieldOptions

inductive OneofOptions where
| mk
  (uninterpretedOption : (Array (UninterpretedOption)))
    : OneofOptions

inductive EnumOptions where
| mk
  (allowAlias : (Option (Bool)))
  (deprecated : (Option (Bool)))
  (uninterpretedOption : (Array (UninterpretedOption)))
    : EnumOptions

inductive EnumValueOptions where
| mk
  (deprecated : (Option (Bool)))
  (uninterpretedOption : (Array (UninterpretedOption)))
    : EnumValueOptions

inductive ServiceOptions where
| mk
  (deprecated : (Option (Bool)))
  (uninterpretedOption : (Array (UninterpretedOption)))
    : ServiceOptions

inductive MethodOptions where
| mk
  (deprecated : (Option (Bool)))
  (idempotencyLevel : (Option (MethodOptions_IdempotencyLevel)))
  (uninterpretedOption : (Array (UninterpretedOption)))
    : MethodOptions

inductive UninterpretedOption_NamePart where
| mk
  (namePart : (Option (String)))
  (isExtension : (Option (Bool)))
    : UninterpretedOption_NamePart

inductive UninterpretedOption where
| mk
  (name : (Array (UninterpretedOption_NamePart)))
  (identifierValue : (Option (String)))
  (positiveIntValue : (Option (Nat)))
  (negativeIntValue : (Option (Int)))
  (doubleValue : (Option (Float)))
  (stringValue : (Option (ByteArray)))
  (aggregateValue : (Option (String)))
    : UninterpretedOption

inductive SourceCodeInfo_Location where
| mk
  (path : (Array (Int)))
  (span : (Array (Int)))
  (leadingComments : (Option (String)))
  (trailingComments : (Option (String)))
  (leadingDetachedComments : (Array (String)))
    : SourceCodeInfo_Location

inductive SourceCodeInfo where
| mk
  (location : (Array (SourceCodeInfo_Location)))
    : SourceCodeInfo

inductive GeneratedCodeInfo_Annotation where
| mk
  (path : (Array (Int)))
  (sourceFile : (Option (String)))
  (begin : (Option (Int)))
  (endd : (Option (Int)))
    : GeneratedCodeInfo_Annotation

inductive GeneratedCodeInfo where
| mk
  (annotation : (Array (GeneratedCodeInfo_Annotation)))
    : GeneratedCodeInfo

end

#eval "Defined definitions"

deriving instance BEq for FileDescriptorSet, FileDescriptorProto, DescriptorProto_ExtensionRange, DescriptorProto_ReservedRange, DescriptorProto, ExtensionRangeOptions, FieldDescriptorProto, OneofDescriptorProto, EnumDescriptorProto_EnumReservedRange, EnumDescriptorProto, EnumValueDescriptorProto, ServiceDescriptorProto, MethodDescriptorProto, FileOptions, MessageOptions, FieldOptions, OneofOptions, EnumOptions, EnumValueOptions, ServiceOptions, MethodOptions, UninterpretedOption_NamePart, UninterpretedOption, SourceCodeInfo_Location, SourceCodeInfo, GeneratedCodeInfo_Annotation, GeneratedCodeInfo
deriving instance InhabitedMut for FileDescriptorSet, FileDescriptorProto, DescriptorProto_ExtensionRange, DescriptorProto_ReservedRange, DescriptorProto, ExtensionRangeOptions, FieldDescriptorProto, OneofDescriptorProto, EnumDescriptorProto_EnumReservedRange, EnumDescriptorProto, EnumValueDescriptorProto, ServiceDescriptorProto, MethodDescriptorProto, FileOptions, MessageOptions, FieldOptions, OneofOptions, EnumOptions, EnumValueOptions, ServiceOptions, MethodOptions, UninterpretedOption_NamePart, UninterpretedOption, SourceCodeInfo_Location, SourceCodeInfo, GeneratedCodeInfo_Annotation, GeneratedCodeInfo
deriving instance Repr for FileDescriptorSet, FileDescriptorProto, DescriptorProto_ExtensionRange, DescriptorProto_ReservedRange, DescriptorProto, ExtensionRangeOptions, FieldDescriptorProto, OneofDescriptorProto, EnumDescriptorProto_EnumReservedRange, EnumDescriptorProto, EnumValueDescriptorProto, ServiceDescriptorProto, MethodDescriptorProto, FileOptions, MessageOptions, FieldOptions, OneofOptions, EnumOptions, EnumValueOptions, ServiceOptions, MethodOptions, UninterpretedOption_NamePart, UninterpretedOption, SourceCodeInfo_Location, SourceCodeInfo, GeneratedCodeInfo_Annotation, GeneratedCodeInfo
#eval "Defined deriving"

def FileDescriptorSet.file : FileDescriptorSet -> (Array (FileDescriptorProto))
| mk v => v
def FileDescriptorSet.mkDefault : FileDescriptorSet := Inhabited.default

def FileDescriptorProto.name : FileDescriptorProto -> (Option (String))
| mk v _ _ _ _ _ _ _ _ _ _ _ => v
def FileDescriptorProto.package : FileDescriptorProto -> (Option (String))
| mk _ v _ _ _ _ _ _ _ _ _ _ => v
def FileDescriptorProto.dependency : FileDescriptorProto -> (Array (String))
| mk _ _ v _ _ _ _ _ _ _ _ _ => v
def FileDescriptorProto.publicDependency : FileDescriptorProto -> (Array (Int))
| mk _ _ _ v _ _ _ _ _ _ _ _ => v
def FileDescriptorProto.weakDependency : FileDescriptorProto -> (Array (Int))
| mk _ _ _ _ v _ _ _ _ _ _ _ => v
def FileDescriptorProto.messageType : FileDescriptorProto -> (Array (DescriptorProto))
| mk _ _ _ _ _ v _ _ _ _ _ _ => v
def FileDescriptorProto.enumType : FileDescriptorProto -> (Array (EnumDescriptorProto))
| mk _ _ _ _ _ _ v _ _ _ _ _ => v
def FileDescriptorProto.service : FileDescriptorProto -> (Array (ServiceDescriptorProto))
| mk _ _ _ _ _ _ _ v _ _ _ _ => v
def FileDescriptorProto.extension : FileDescriptorProto -> (Array (FieldDescriptorProto))
| mk _ _ _ _ _ _ _ _ v _ _ _ => v
def FileDescriptorProto.options : FileDescriptorProto -> (Option (FileOptions))
| mk _ _ _ _ _ _ _ _ _ v _ _ => v
def FileDescriptorProto.sourceCodeInfo : FileDescriptorProto -> (Option (SourceCodeInfo))
| mk _ _ _ _ _ _ _ _ _ _ v _ => v
def FileDescriptorProto.syntaxx : FileDescriptorProto -> (Option (String))
| mk _ _ _ _ _ _ _ _ _ _ _ v => v
def FileDescriptorProto.mkDefault : FileDescriptorProto := Inhabited.default

def DescriptorProto.name : DescriptorProto -> (Option (String))
| mk v _ _ _ _ _ _ _ _ _ => v
def DescriptorProto.field : DescriptorProto -> (Array (FieldDescriptorProto))
| mk _ v _ _ _ _ _ _ _ _ => v
def DescriptorProto.extension : DescriptorProto -> (Array (FieldDescriptorProto))
| mk _ _ v _ _ _ _ _ _ _ => v
def DescriptorProto.nestedType : DescriptorProto -> (Array (DescriptorProto))
| mk _ _ _ v _ _ _ _ _ _ => v
def DescriptorProto.enumType : DescriptorProto -> (Array (EnumDescriptorProto))
| mk _ _ _ _ v _ _ _ _ _ => v
def DescriptorProto.extensionRange : DescriptorProto -> (Array (DescriptorProto_ExtensionRange))
| mk _ _ _ _ _ v _ _ _ _ => v
def DescriptorProto.oneofDecl : DescriptorProto -> (Array (OneofDescriptorProto))
| mk _ _ _ _ _ _ v _ _ _ => v
def DescriptorProto.options : DescriptorProto -> (Option (MessageOptions))
| mk _ _ _ _ _ _ _ v _ _ => v
def DescriptorProto.reservedRange : DescriptorProto -> (Array (DescriptorProto_ReservedRange))
| mk _ _ _ _ _ _ _ _ v _ => v
def DescriptorProto.reservedName : DescriptorProto -> (Array (String))
| mk _ _ _ _ _ _ _ _ _ v => v
def DescriptorProto.mkDefault : DescriptorProto := Inhabited.default

def DescriptorProto_ExtensionRange.start : DescriptorProto_ExtensionRange -> (Option (Int))
| mk v _ _ => v
def DescriptorProto_ExtensionRange.endd : DescriptorProto_ExtensionRange -> (Option (Int))
| mk _ v _ => v
def DescriptorProto_ExtensionRange.options : DescriptorProto_ExtensionRange -> (Option (ExtensionRangeOptions))
| mk _ _ v => v
def DescriptorProto_ExtensionRange.mkDefault : DescriptorProto_ExtensionRange := Inhabited.default

def DescriptorProto_ReservedRange.start : DescriptorProto_ReservedRange -> (Option (Int))
| mk v _ => v
def DescriptorProto_ReservedRange.endd : DescriptorProto_ReservedRange -> (Option (Int))
| mk _ v => v
def DescriptorProto_ReservedRange.mkDefault : DescriptorProto_ReservedRange := Inhabited.default

def ExtensionRangeOptions.uninterpretedOption : ExtensionRangeOptions -> (Array (UninterpretedOption))
| mk v => v
def ExtensionRangeOptions.mkDefault : ExtensionRangeOptions := Inhabited.default

def FieldDescriptorProto.name : FieldDescriptorProto -> (Option (String))
| mk v _ _ _ _ _ _ _ _ _ _ => v
def FieldDescriptorProto.number : FieldDescriptorProto -> (Option (Int))
| mk _ v _ _ _ _ _ _ _ _ _ => v
def FieldDescriptorProto.label : FieldDescriptorProto -> (Option (FieldDescriptorProto_Label))
| mk _ _ v _ _ _ _ _ _ _ _ => v
def FieldDescriptorProto.type : FieldDescriptorProto -> (Option (FieldDescriptorProto_Type))
| mk _ _ _ v _ _ _ _ _ _ _ => v
def FieldDescriptorProto.typeName : FieldDescriptorProto -> (Option (String))
| mk _ _ _ _ v _ _ _ _ _ _ => v
def FieldDescriptorProto.extendee : FieldDescriptorProto -> (Option (String))
| mk _ _ _ _ _ v _ _ _ _ _ => v
def FieldDescriptorProto.defaultValue : FieldDescriptorProto -> (Option (String))
| mk _ _ _ _ _ _ v _ _ _ _ => v
def FieldDescriptorProto.oneofIndex : FieldDescriptorProto -> (Option (Int))
| mk _ _ _ _ _ _ _ v _ _ _ => v
def FieldDescriptorProto.jsonName : FieldDescriptorProto -> (Option (String))
| mk _ _ _ _ _ _ _ _ v _ _ => v
def FieldDescriptorProto.options : FieldDescriptorProto -> (Option (FieldOptions))
| mk _ _ _ _ _ _ _ _ _ v _ => v
def FieldDescriptorProto.proto3Optional : FieldDescriptorProto -> (Option (Bool))
| mk _ _ _ _ _ _ _ _ _ _ v => v
def FieldDescriptorProto.mkDefault : FieldDescriptorProto := Inhabited.default

def OneofDescriptorProto.name : OneofDescriptorProto -> (Option (String))
| mk v _ => v
def OneofDescriptorProto.options : OneofDescriptorProto -> (Option (OneofOptions))
| mk _ v => v
def OneofDescriptorProto.mkDefault : OneofDescriptorProto := Inhabited.default

def EnumDescriptorProto.name : EnumDescriptorProto -> (Option (String))
| mk v _ _ _ _ => v
def EnumDescriptorProto.value : EnumDescriptorProto -> (Array (EnumValueDescriptorProto))
| mk _ v _ _ _ => v
def EnumDescriptorProto.options : EnumDescriptorProto -> (Option (EnumOptions))
| mk _ _ v _ _ => v
def EnumDescriptorProto.reservedRange : EnumDescriptorProto -> (Array (EnumDescriptorProto_EnumReservedRange))
| mk _ _ _ v _ => v
def EnumDescriptorProto.reservedName : EnumDescriptorProto -> (Array (String))
| mk _ _ _ _ v => v
def EnumDescriptorProto.mkDefault : EnumDescriptorProto := Inhabited.default

def EnumDescriptorProto_EnumReservedRange.start : EnumDescriptorProto_EnumReservedRange -> (Option (Int))
| mk v _ => v
def EnumDescriptorProto_EnumReservedRange.endd : EnumDescriptorProto_EnumReservedRange -> (Option (Int))
| mk _ v => v
def EnumDescriptorProto_EnumReservedRange.mkDefault : EnumDescriptorProto_EnumReservedRange := Inhabited.default

def EnumValueDescriptorProto.name : EnumValueDescriptorProto -> (Option (String))
| mk v _ _ => v
def EnumValueDescriptorProto.number : EnumValueDescriptorProto -> (Option (Int))
| mk _ v _ => v
def EnumValueDescriptorProto.options : EnumValueDescriptorProto -> (Option (EnumValueOptions))
| mk _ _ v => v
def EnumValueDescriptorProto.mkDefault : EnumValueDescriptorProto := Inhabited.default

def ServiceDescriptorProto.name : ServiceDescriptorProto -> (Option (String))
| mk v _ _ => v
def ServiceDescriptorProto.method : ServiceDescriptorProto -> (Array (MethodDescriptorProto))
| mk _ v _ => v
def ServiceDescriptorProto.options : ServiceDescriptorProto -> (Option (ServiceOptions))
| mk _ _ v => v
def ServiceDescriptorProto.mkDefault : ServiceDescriptorProto := Inhabited.default

def MethodDescriptorProto.name : MethodDescriptorProto -> (Option (String))
| mk v _ _ _ _ _ => v
def MethodDescriptorProto.inputType : MethodDescriptorProto -> (Option (String))
| mk _ v _ _ _ _ => v
def MethodDescriptorProto.outputType : MethodDescriptorProto -> (Option (String))
| mk _ _ v _ _ _ => v
def MethodDescriptorProto.options : MethodDescriptorProto -> (Option (MethodOptions))
| mk _ _ _ v _ _ => v
def MethodDescriptorProto.clientStreaming : MethodDescriptorProto -> (Option (Bool))
| mk _ _ _ _ v _ => v
def MethodDescriptorProto.serverStreaming : MethodDescriptorProto -> (Option (Bool))
| mk _ _ _ _ _ v => v
def MethodDescriptorProto.mkDefault : MethodDescriptorProto := Inhabited.default

def FileOptions.javaPackage : FileOptions -> (Option (String))
| mk v _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.javaOuterClassname : FileOptions -> (Option (String))
| mk _ v _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.javaMultipleFiles : FileOptions -> (Option (Bool))
| mk _ _ v _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.javaGenerateEqualsAndHash : FileOptions -> (Option (Bool))
| mk _ _ _ v _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.javaStringCheckUtf8 : FileOptions -> (Option (Bool))
| mk _ _ _ _ v _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.optimizeFor : FileOptions -> (Option (FileOptions_OptimizeMode))
| mk _ _ _ _ _ v _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.goPackage : FileOptions -> (Option (String))
| mk _ _ _ _ _ _ v _ _ _ _ _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.ccGenericServices : FileOptions -> (Option (Bool))
| mk _ _ _ _ _ _ _ v _ _ _ _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.javaGenericServices : FileOptions -> (Option (Bool))
| mk _ _ _ _ _ _ _ _ v _ _ _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.pyGenericServices : FileOptions -> (Option (Bool))
| mk _ _ _ _ _ _ _ _ _ v _ _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.phpGenericServices : FileOptions -> (Option (Bool))
| mk _ _ _ _ _ _ _ _ _ _ v _ _ _ _ _ _ _ _ _ _ => v
def FileOptions.deprecated : FileOptions -> (Option (Bool))
| mk _ _ _ _ _ _ _ _ _ _ _ v _ _ _ _ _ _ _ _ _ => v
def FileOptions.ccEnableArenas : FileOptions -> (Option (Bool))
| mk _ _ _ _ _ _ _ _ _ _ _ _ v _ _ _ _ _ _ _ _ => v
def FileOptions.objcClassPrefix : FileOptions -> (Option (String))
| mk _ _ _ _ _ _ _ _ _ _ _ _ _ v _ _ _ _ _ _ _ => v
def FileOptions.csharpNamespace : FileOptions -> (Option (String))
| mk _ _ _ _ _ _ _ _ _ _ _ _ _ _ v _ _ _ _ _ _ => v
def FileOptions.swiftPrefix : FileOptions -> (Option (String))
| mk _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ v _ _ _ _ _ => v
def FileOptions.phpClassPrefix : FileOptions -> (Option (String))
| mk _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ v _ _ _ _ => v
def FileOptions.phpNamespace : FileOptions -> (Option (String))
| mk _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ v _ _ _ => v
def FileOptions.phpMetadataNamespace : FileOptions -> (Option (String))
| mk _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ v _ _ => v
def FileOptions.rubyPackage : FileOptions -> (Option (String))
| mk _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ v _ => v
def FileOptions.uninterpretedOption : FileOptions -> (Array (UninterpretedOption))
| mk _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ v => v
def FileOptions.mkDefault : FileOptions := Inhabited.default

def MessageOptions.messageSetWireFormat : MessageOptions -> (Option (Bool))
| mk v _ _ _ _ => v
def MessageOptions.noStandardDescriptorAccessor : MessageOptions -> (Option (Bool))
| mk _ v _ _ _ => v
def MessageOptions.deprecated : MessageOptions -> (Option (Bool))
| mk _ _ v _ _ => v
def MessageOptions.mapEntry : MessageOptions -> (Option (Bool))
| mk _ _ _ v _ => v
def MessageOptions.uninterpretedOption : MessageOptions -> (Array (UninterpretedOption))
| mk _ _ _ _ v => v
def MessageOptions.mkDefault : MessageOptions := Inhabited.default

def FieldOptions.ctype : FieldOptions -> (Option (FieldOptions_CType))
| mk v _ _ _ _ _ _ => v
def FieldOptions.packed : FieldOptions -> (Option (Bool))
| mk _ v _ _ _ _ _ => v
def FieldOptions.jstype : FieldOptions -> (Option (FieldOptions_JSType))
| mk _ _ v _ _ _ _ => v
def FieldOptions.lazy : FieldOptions -> (Option (Bool))
| mk _ _ _ v _ _ _ => v
def FieldOptions.deprecated : FieldOptions -> (Option (Bool))
| mk _ _ _ _ v _ _ => v
def FieldOptions.weak : FieldOptions -> (Option (Bool))
| mk _ _ _ _ _ v _ => v
def FieldOptions.uninterpretedOption : FieldOptions -> (Array (UninterpretedOption))
| mk _ _ _ _ _ _ v => v
def FieldOptions.mkDefault : FieldOptions := Inhabited.default

def OneofOptions.uninterpretedOption : OneofOptions -> (Array (UninterpretedOption))
| mk v => v
def OneofOptions.mkDefault : OneofOptions := Inhabited.default

def EnumOptions.allowAlias : EnumOptions -> (Option (Bool))
| mk v _ _ => v
def EnumOptions.deprecated : EnumOptions -> (Option (Bool))
| mk _ v _ => v
def EnumOptions.uninterpretedOption : EnumOptions -> (Array (UninterpretedOption))
| mk _ _ v => v
def EnumOptions.mkDefault : EnumOptions := Inhabited.default

def EnumValueOptions.deprecated : EnumValueOptions -> (Option (Bool))
| mk v _ => v
def EnumValueOptions.uninterpretedOption : EnumValueOptions -> (Array (UninterpretedOption))
| mk _ v => v
def EnumValueOptions.mkDefault : EnumValueOptions := Inhabited.default

def ServiceOptions.deprecated : ServiceOptions -> (Option (Bool))
| mk v _ => v
def ServiceOptions.uninterpretedOption : ServiceOptions -> (Array (UninterpretedOption))
| mk _ v => v
def ServiceOptions.mkDefault : ServiceOptions := Inhabited.default

def MethodOptions.deprecated : MethodOptions -> (Option (Bool))
| mk v _ _ => v
def MethodOptions.idempotencyLevel : MethodOptions -> (Option (MethodOptions_IdempotencyLevel))
| mk _ v _ => v
def MethodOptions.uninterpretedOption : MethodOptions -> (Array (UninterpretedOption))
| mk _ _ v => v
def MethodOptions.mkDefault : MethodOptions := Inhabited.default

def UninterpretedOption.name : UninterpretedOption -> (Array (UninterpretedOption_NamePart))
| mk v _ _ _ _ _ _ => v
def UninterpretedOption.identifierValue : UninterpretedOption -> (Option (String))
| mk _ v _ _ _ _ _ => v
def UninterpretedOption.positiveIntValue : UninterpretedOption -> (Option (Nat))
| mk _ _ v _ _ _ _ => v
def UninterpretedOption.negativeIntValue : UninterpretedOption -> (Option (Int))
| mk _ _ _ v _ _ _ => v
def UninterpretedOption.doubleValue : UninterpretedOption -> (Option (Float))
| mk _ _ _ _ v _ _ => v
def UninterpretedOption.stringValue : UninterpretedOption -> (Option (ByteArray))
| mk _ _ _ _ _ v _ => v
def UninterpretedOption.aggregateValue : UninterpretedOption -> (Option (String))
| mk _ _ _ _ _ _ v => v
def UninterpretedOption.mkDefault : UninterpretedOption := Inhabited.default

def UninterpretedOption_NamePart.namePart : UninterpretedOption_NamePart -> (Option (String))
| mk v _ => v
def UninterpretedOption_NamePart.isExtension : UninterpretedOption_NamePart -> (Option (Bool))
| mk _ v => v
def UninterpretedOption_NamePart.mkDefault : UninterpretedOption_NamePart := Inhabited.default

def SourceCodeInfo.location : SourceCodeInfo -> (Array (SourceCodeInfo_Location))
| mk v => v
def SourceCodeInfo.mkDefault : SourceCodeInfo := Inhabited.default

def SourceCodeInfo_Location.path : SourceCodeInfo_Location -> (Array (Int))
| mk v _ _ _ _ => v
def SourceCodeInfo_Location.span : SourceCodeInfo_Location -> (Array (Int))
| mk _ v _ _ _ => v
def SourceCodeInfo_Location.leadingComments : SourceCodeInfo_Location -> (Option (String))
| mk _ _ v _ _ => v
def SourceCodeInfo_Location.trailingComments : SourceCodeInfo_Location -> (Option (String))
| mk _ _ _ v _ => v
def SourceCodeInfo_Location.leadingDetachedComments : SourceCodeInfo_Location -> (Array (String))
| mk _ _ _ _ v => v
def SourceCodeInfo_Location.mkDefault : SourceCodeInfo_Location := Inhabited.default

def GeneratedCodeInfo.annotation : GeneratedCodeInfo -> (Array (GeneratedCodeInfo_Annotation))
| mk v => v
def GeneratedCodeInfo.mkDefault : GeneratedCodeInfo := Inhabited.default

def GeneratedCodeInfo_Annotation.path : GeneratedCodeInfo_Annotation -> (Array (Int))
| mk v _ _ _ => v
def GeneratedCodeInfo_Annotation.sourceFile : GeneratedCodeInfo_Annotation -> (Option (String))
| mk _ v _ _ => v
def GeneratedCodeInfo_Annotation.begin : GeneratedCodeInfo_Annotation -> (Option (Int))
| mk _ _ v _ => v
def GeneratedCodeInfo_Annotation.endd : GeneratedCodeInfo_Annotation -> (Option (Int))
| mk _ _ _ v => v
def GeneratedCodeInfo_Annotation.mkDefault : GeneratedCodeInfo_Annotation := Inhabited.default

#eval "Defined accessors"

mutual
partial def FileDescriptorSet__serializeAux (x: ByteArray) : FileDescriptorSet -> ByteArray
| FileDescriptorSet.mk a0 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (FileDescriptorProto__serializeAux)) 2 rfl 1 res a0
  return res


partial def FileDescriptorSet__deserializeAux (x: FileDescriptorSet) : LeanProto.EncDec.ProtoParseM FileDescriptorSet := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do FileDescriptorSet__deserializeAux (FileDescriptorSet.mk ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (FileDescriptorProto__deserializeAux v)) arbitrary) typ  (x.file))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            FileDescriptorSet__deserializeAux x


partial def FileDescriptorProto__serializeAux (x: ByteArray) : FileDescriptorProto -> ByteArray
| FileDescriptorProto.mk a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 2) res a1
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeString) 2 rfl 3 res a2
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 10 res a3
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 11 res a4
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (DescriptorProto__serializeAux)) 2 rfl 4 res a5
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (EnumDescriptorProto__serializeAux)) 2 rfl 5 res a6
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (ServiceDescriptorProto__serializeAux)) 2 rfl 6 res a7
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (FieldDescriptorProto__serializeAux)) 2 rfl 7 res a8
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeMessage (FileOptions__serializeAux)) 2 rfl 8) res a9
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeMessage (SourceCodeInfo__serializeAux)) 2 rfl 9) res a10
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 12) res a11
  return res


partial def FileDescriptorProto__deserializeAux (x: FileDescriptorProto) : LeanProto.EncDec.ProtoParseM FileDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.name.getD arbitrary))) (FileDescriptorProto.package x) (FileDescriptorProto.dependency x) (FileDescriptorProto.publicDependency x) (FileDescriptorProto.weakDependency x) (FileDescriptorProto.messageType x) (FileDescriptorProto.enumType x) (FileDescriptorProto.service x) (FileDescriptorProto.extension x) (FileDescriptorProto.options x) (FileDescriptorProto.sourceCodeInfo x) (FileDescriptorProto.syntaxx x) )
  | 2 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.package.getD arbitrary))) (FileDescriptorProto.dependency x) (FileDescriptorProto.publicDependency x) (FileDescriptorProto.weakDependency x) (FileDescriptorProto.messageType x) (FileDescriptorProto.enumType x) (FileDescriptorProto.service x) (FileDescriptorProto.extension x) (FileDescriptorProto.options x) (FileDescriptorProto.sourceCodeInfo x) (FileDescriptorProto.syntaxx x) )
  | 3 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) (FileDescriptorProto.package x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) arbitrary) typ  (x.dependency))) (FileDescriptorProto.publicDependency x) (FileDescriptorProto.weakDependency x) (FileDescriptorProto.messageType x) (FileDescriptorProto.enumType x) (FileDescriptorProto.service x) (FileDescriptorProto.extension x) (FileDescriptorProto.options x) (FileDescriptorProto.sourceCodeInfo x) (FileDescriptorProto.syntaxx x) )
  | 10 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) (FileDescriptorProto.package x) (FileDescriptorProto.dependency x) ((← LeanProto.EncDec.decodeKeyAndMixedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) arbitrary) typ  (x.publicDependency))) (FileDescriptorProto.weakDependency x) (FileDescriptorProto.messageType x) (FileDescriptorProto.enumType x) (FileDescriptorProto.service x) (FileDescriptorProto.extension x) (FileDescriptorProto.options x) (FileDescriptorProto.sourceCodeInfo x) (FileDescriptorProto.syntaxx x) )
  | 11 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) (FileDescriptorProto.package x) (FileDescriptorProto.dependency x) (FileDescriptorProto.publicDependency x) ((← LeanProto.EncDec.decodeKeyAndMixedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) arbitrary) typ  (x.weakDependency))) (FileDescriptorProto.messageType x) (FileDescriptorProto.enumType x) (FileDescriptorProto.service x) (FileDescriptorProto.extension x) (FileDescriptorProto.options x) (FileDescriptorProto.sourceCodeInfo x) (FileDescriptorProto.syntaxx x) )
  | 4 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) (FileDescriptorProto.package x) (FileDescriptorProto.dependency x) (FileDescriptorProto.publicDependency x) (FileDescriptorProto.weakDependency x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (DescriptorProto__deserializeAux v)) arbitrary) typ  (x.messageType))) (FileDescriptorProto.enumType x) (FileDescriptorProto.service x) (FileDescriptorProto.extension x) (FileDescriptorProto.options x) (FileDescriptorProto.sourceCodeInfo x) (FileDescriptorProto.syntaxx x) )
  | 5 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) (FileDescriptorProto.package x) (FileDescriptorProto.dependency x) (FileDescriptorProto.publicDependency x) (FileDescriptorProto.weakDependency x) (FileDescriptorProto.messageType x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (EnumDescriptorProto__deserializeAux v)) arbitrary) typ  (x.enumType))) (FileDescriptorProto.service x) (FileDescriptorProto.extension x) (FileDescriptorProto.options x) (FileDescriptorProto.sourceCodeInfo x) (FileDescriptorProto.syntaxx x) )
  | 6 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) (FileDescriptorProto.package x) (FileDescriptorProto.dependency x) (FileDescriptorProto.publicDependency x) (FileDescriptorProto.weakDependency x) (FileDescriptorProto.messageType x) (FileDescriptorProto.enumType x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (ServiceDescriptorProto__deserializeAux v)) arbitrary) typ  (x.service))) (FileDescriptorProto.extension x) (FileDescriptorProto.options x) (FileDescriptorProto.sourceCodeInfo x) (FileDescriptorProto.syntaxx x) )
  | 7 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) (FileDescriptorProto.package x) (FileDescriptorProto.dependency x) (FileDescriptorProto.publicDependency x) (FileDescriptorProto.weakDependency x) (FileDescriptorProto.messageType x) (FileDescriptorProto.enumType x) (FileDescriptorProto.service x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (FieldDescriptorProto__deserializeAux v)) arbitrary) typ  (x.extension))) (FileDescriptorProto.options x) (FileDescriptorProto.sourceCodeInfo x) (FileDescriptorProto.syntaxx x) )
  | 8 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) (FileDescriptorProto.package x) (FileDescriptorProto.dependency x) (FileDescriptorProto.publicDependency x) (FileDescriptorProto.weakDependency x) (FileDescriptorProto.messageType x) (FileDescriptorProto.enumType x) (FileDescriptorProto.service x) (FileDescriptorProto.extension x) ((← (fun v => LeanProto.EncDec.decodeMessage (FileOptions__deserializeAux v)) (x.options.getD arbitrary))) (FileDescriptorProto.sourceCodeInfo x) (FileDescriptorProto.syntaxx x) )
  | 9 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) (FileDescriptorProto.package x) (FileDescriptorProto.dependency x) (FileDescriptorProto.publicDependency x) (FileDescriptorProto.weakDependency x) (FileDescriptorProto.messageType x) (FileDescriptorProto.enumType x) (FileDescriptorProto.service x) (FileDescriptorProto.extension x) (FileDescriptorProto.options x) ((← (fun v => LeanProto.EncDec.decodeMessage (SourceCodeInfo__deserializeAux v)) (x.sourceCodeInfo.getD arbitrary))) (FileDescriptorProto.syntaxx x) )
  | 12 => do FileDescriptorProto__deserializeAux (FileDescriptorProto.mk (FileDescriptorProto.name x) (FileDescriptorProto.package x) (FileDescriptorProto.dependency x) (FileDescriptorProto.publicDependency x) (FileDescriptorProto.weakDependency x) (FileDescriptorProto.messageType x) (FileDescriptorProto.enumType x) (FileDescriptorProto.service x) (FileDescriptorProto.extension x) (FileDescriptorProto.options x) (FileDescriptorProto.sourceCodeInfo x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.syntaxx.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            FileDescriptorProto__deserializeAux x


partial def DescriptorProto_ExtensionRange__serializeAux (x: ByteArray) : DescriptorProto_ExtensionRange -> ByteArray
| DescriptorProto_ExtensionRange.mk a0 a1 a2 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 2) res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeMessage (ExtensionRangeOptions__serializeAux)) 2 rfl 3) res a2
  return res


partial def DescriptorProto_ExtensionRange__deserializeAux (x: DescriptorProto_ExtensionRange) : LeanProto.EncDec.ProtoParseM DescriptorProto_ExtensionRange := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do DescriptorProto_ExtensionRange__deserializeAux (DescriptorProto_ExtensionRange.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.start.getD arbitrary))) (DescriptorProto_ExtensionRange.endd x) (DescriptorProto_ExtensionRange.options x) )
  | 2 => do DescriptorProto_ExtensionRange__deserializeAux (DescriptorProto_ExtensionRange.mk (DescriptorProto_ExtensionRange.start x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.endd.getD arbitrary))) (DescriptorProto_ExtensionRange.options x) )
  | 3 => do DescriptorProto_ExtensionRange__deserializeAux (DescriptorProto_ExtensionRange.mk (DescriptorProto_ExtensionRange.start x) (DescriptorProto_ExtensionRange.endd x) ((← (fun v => LeanProto.EncDec.decodeMessage (ExtensionRangeOptions__deserializeAux v)) (x.options.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            DescriptorProto_ExtensionRange__deserializeAux x

partial def DescriptorProto_ReservedRange__serializeAux (x: ByteArray) : DescriptorProto_ReservedRange -> ByteArray
| DescriptorProto_ReservedRange.mk a0 a1 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 2) res a1
  return res


partial def DescriptorProto_ReservedRange__deserializeAux (x: DescriptorProto_ReservedRange) : LeanProto.EncDec.ProtoParseM DescriptorProto_ReservedRange := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do DescriptorProto_ReservedRange__deserializeAux (DescriptorProto_ReservedRange.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.start.getD arbitrary))) (DescriptorProto_ReservedRange.endd x) )
  | 2 => do DescriptorProto_ReservedRange__deserializeAux (DescriptorProto_ReservedRange.mk (DescriptorProto_ReservedRange.start x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.endd.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            DescriptorProto_ReservedRange__deserializeAux x

partial def DescriptorProto__serializeAux (x: ByteArray) : DescriptorProto -> ByteArray
| DescriptorProto.mk a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (FieldDescriptorProto__serializeAux)) 2 rfl 2 res a1
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (FieldDescriptorProto__serializeAux)) 2 rfl 6 res a2
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (DescriptorProto__serializeAux)) 2 rfl 3 res a3
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (EnumDescriptorProto__serializeAux)) 2 rfl 4 res a4
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (DescriptorProto_ExtensionRange__serializeAux)) 2 rfl 5 res a5
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (OneofDescriptorProto__serializeAux)) 2 rfl 8 res a6
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeMessage (MessageOptions__serializeAux)) 2 rfl 7) res a7
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (DescriptorProto_ReservedRange__serializeAux)) 2 rfl 9 res a8
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeString) 2 rfl 10 res a9
  return res


partial def DescriptorProto__deserializeAux (x: DescriptorProto) : LeanProto.EncDec.ProtoParseM DescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do DescriptorProto__deserializeAux (DescriptorProto.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.name.getD arbitrary))) (DescriptorProto.field x) (DescriptorProto.extension x) (DescriptorProto.nestedType x) (DescriptorProto.enumType x) (DescriptorProto.extensionRange x) (DescriptorProto.oneofDecl x) (DescriptorProto.options x) (DescriptorProto.reservedRange x) (DescriptorProto.reservedName x) )
  | 2 => do DescriptorProto__deserializeAux (DescriptorProto.mk (DescriptorProto.name x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (FieldDescriptorProto__deserializeAux v)) arbitrary) typ  (x.field))) (DescriptorProto.extension x) (DescriptorProto.nestedType x) (DescriptorProto.enumType x) (DescriptorProto.extensionRange x) (DescriptorProto.oneofDecl x) (DescriptorProto.options x) (DescriptorProto.reservedRange x) (DescriptorProto.reservedName x) )
  | 6 => do DescriptorProto__deserializeAux (DescriptorProto.mk (DescriptorProto.name x) (DescriptorProto.field x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (FieldDescriptorProto__deserializeAux v)) arbitrary) typ  (x.extension))) (DescriptorProto.nestedType x) (DescriptorProto.enumType x) (DescriptorProto.extensionRange x) (DescriptorProto.oneofDecl x) (DescriptorProto.options x) (DescriptorProto.reservedRange x) (DescriptorProto.reservedName x) )
  | 3 => do DescriptorProto__deserializeAux (DescriptorProto.mk (DescriptorProto.name x) (DescriptorProto.field x) (DescriptorProto.extension x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (DescriptorProto__deserializeAux v)) arbitrary) typ  (x.nestedType))) (DescriptorProto.enumType x) (DescriptorProto.extensionRange x) (DescriptorProto.oneofDecl x) (DescriptorProto.options x) (DescriptorProto.reservedRange x) (DescriptorProto.reservedName x) )
  | 4 => do DescriptorProto__deserializeAux (DescriptorProto.mk (DescriptorProto.name x) (DescriptorProto.field x) (DescriptorProto.extension x) (DescriptorProto.nestedType x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (EnumDescriptorProto__deserializeAux v)) arbitrary) typ  (x.enumType))) (DescriptorProto.extensionRange x) (DescriptorProto.oneofDecl x) (DescriptorProto.options x) (DescriptorProto.reservedRange x) (DescriptorProto.reservedName x) )
  | 5 => do DescriptorProto__deserializeAux (DescriptorProto.mk (DescriptorProto.name x) (DescriptorProto.field x) (DescriptorProto.extension x) (DescriptorProto.nestedType x) (DescriptorProto.enumType x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (DescriptorProto_ExtensionRange__deserializeAux v)) arbitrary) typ  (x.extensionRange))) (DescriptorProto.oneofDecl x) (DescriptorProto.options x) (DescriptorProto.reservedRange x) (DescriptorProto.reservedName x) )
  | 8 => do DescriptorProto__deserializeAux (DescriptorProto.mk (DescriptorProto.name x) (DescriptorProto.field x) (DescriptorProto.extension x) (DescriptorProto.nestedType x) (DescriptorProto.enumType x) (DescriptorProto.extensionRange x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (OneofDescriptorProto__deserializeAux v)) arbitrary) typ  (x.oneofDecl))) (DescriptorProto.options x) (DescriptorProto.reservedRange x) (DescriptorProto.reservedName x) )
  | 7 => do DescriptorProto__deserializeAux (DescriptorProto.mk (DescriptorProto.name x) (DescriptorProto.field x) (DescriptorProto.extension x) (DescriptorProto.nestedType x) (DescriptorProto.enumType x) (DescriptorProto.extensionRange x) (DescriptorProto.oneofDecl x) ((← (fun v => LeanProto.EncDec.decodeMessage (MessageOptions__deserializeAux v)) (x.options.getD arbitrary))) (DescriptorProto.reservedRange x) (DescriptorProto.reservedName x) )
  | 9 => do DescriptorProto__deserializeAux (DescriptorProto.mk (DescriptorProto.name x) (DescriptorProto.field x) (DescriptorProto.extension x) (DescriptorProto.nestedType x) (DescriptorProto.enumType x) (DescriptorProto.extensionRange x) (DescriptorProto.oneofDecl x) (DescriptorProto.options x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (DescriptorProto_ReservedRange__deserializeAux v)) arbitrary) typ  (x.reservedRange))) (DescriptorProto.reservedName x) )
  | 10 => do DescriptorProto__deserializeAux (DescriptorProto.mk (DescriptorProto.name x) (DescriptorProto.field x) (DescriptorProto.extension x) (DescriptorProto.nestedType x) (DescriptorProto.enumType x) (DescriptorProto.extensionRange x) (DescriptorProto.oneofDecl x) (DescriptorProto.options x) (DescriptorProto.reservedRange x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) arbitrary) typ  (x.reservedName))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            DescriptorProto__deserializeAux x


partial def ExtensionRangeOptions__serializeAux (x: ByteArray) : ExtensionRangeOptions -> ByteArray
| ExtensionRangeOptions.mk a0 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (UninterpretedOption__serializeAux)) 2 rfl 999 res a0
  return res


partial def ExtensionRangeOptions__deserializeAux (x: ExtensionRangeOptions) : LeanProto.EncDec.ProtoParseM ExtensionRangeOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 999 => do ExtensionRangeOptions__deserializeAux (ExtensionRangeOptions.mk ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (UninterpretedOption__deserializeAux v)) arbitrary) typ  (x.uninterpretedOption))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            ExtensionRangeOptions__deserializeAux x


partial def FieldDescriptorProto__serializeAux (x: ByteArray) : FieldDescriptorProto -> ByteArray
| FieldDescriptorProto.mk a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 3) res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeEnum) 0 rfl 4) res a2
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeEnum) 0 rfl 5) res a3
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 6) res a4
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 2) res a5
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 7) res a6
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 9) res a7
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 10) res a8
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeMessage (FieldOptions__serializeAux)) 2 rfl 8) res a9
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 17) res a10
  return res


partial def FieldDescriptorProto__deserializeAux (x: FieldDescriptorProto) : LeanProto.EncDec.ProtoParseM FieldDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.name.getD arbitrary))) (FieldDescriptorProto.number x) (FieldDescriptorProto.label x) (FieldDescriptorProto.type x) (FieldDescriptorProto.typeName x) (FieldDescriptorProto.extendee x) (FieldDescriptorProto.defaultValue x) (FieldDescriptorProto.oneofIndex x) (FieldDescriptorProto.jsonName x) (FieldDescriptorProto.options x) (FieldDescriptorProto.proto3Optional x) )
  | 3 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk (FieldDescriptorProto.name x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.number.getD arbitrary))) (FieldDescriptorProto.label x) (FieldDescriptorProto.type x) (FieldDescriptorProto.typeName x) (FieldDescriptorProto.extendee x) (FieldDescriptorProto.defaultValue x) (FieldDescriptorProto.oneofIndex x) (FieldDescriptorProto.jsonName x) (FieldDescriptorProto.options x) (FieldDescriptorProto.proto3Optional x) )
  | 4 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk (FieldDescriptorProto.name x) (FieldDescriptorProto.number x) ((← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.decodeEnum (α:=FieldDescriptorProto_Label))) (x.label.getD arbitrary))) (FieldDescriptorProto.type x) (FieldDescriptorProto.typeName x) (FieldDescriptorProto.extendee x) (FieldDescriptorProto.defaultValue x) (FieldDescriptorProto.oneofIndex x) (FieldDescriptorProto.jsonName x) (FieldDescriptorProto.options x) (FieldDescriptorProto.proto3Optional x) )
  | 5 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk (FieldDescriptorProto.name x) (FieldDescriptorProto.number x) (FieldDescriptorProto.label x) ((← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.decodeEnum (α:=FieldDescriptorProto_Type))) (x.type.getD arbitrary))) (FieldDescriptorProto.typeName x) (FieldDescriptorProto.extendee x) (FieldDescriptorProto.defaultValue x) (FieldDescriptorProto.oneofIndex x) (FieldDescriptorProto.jsonName x) (FieldDescriptorProto.options x) (FieldDescriptorProto.proto3Optional x) )
  | 6 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk (FieldDescriptorProto.name x) (FieldDescriptorProto.number x) (FieldDescriptorProto.label x) (FieldDescriptorProto.type x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.typeName.getD arbitrary))) (FieldDescriptorProto.extendee x) (FieldDescriptorProto.defaultValue x) (FieldDescriptorProto.oneofIndex x) (FieldDescriptorProto.jsonName x) (FieldDescriptorProto.options x) (FieldDescriptorProto.proto3Optional x) )
  | 2 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk (FieldDescriptorProto.name x) (FieldDescriptorProto.number x) (FieldDescriptorProto.label x) (FieldDescriptorProto.type x) (FieldDescriptorProto.typeName x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.extendee.getD arbitrary))) (FieldDescriptorProto.defaultValue x) (FieldDescriptorProto.oneofIndex x) (FieldDescriptorProto.jsonName x) (FieldDescriptorProto.options x) (FieldDescriptorProto.proto3Optional x) )
  | 7 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk (FieldDescriptorProto.name x) (FieldDescriptorProto.number x) (FieldDescriptorProto.label x) (FieldDescriptorProto.type x) (FieldDescriptorProto.typeName x) (FieldDescriptorProto.extendee x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.defaultValue.getD arbitrary))) (FieldDescriptorProto.oneofIndex x) (FieldDescriptorProto.jsonName x) (FieldDescriptorProto.options x) (FieldDescriptorProto.proto3Optional x) )
  | 9 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk (FieldDescriptorProto.name x) (FieldDescriptorProto.number x) (FieldDescriptorProto.label x) (FieldDescriptorProto.type x) (FieldDescriptorProto.typeName x) (FieldDescriptorProto.extendee x) (FieldDescriptorProto.defaultValue x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.oneofIndex.getD arbitrary))) (FieldDescriptorProto.jsonName x) (FieldDescriptorProto.options x) (FieldDescriptorProto.proto3Optional x) )
  | 10 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk (FieldDescriptorProto.name x) (FieldDescriptorProto.number x) (FieldDescriptorProto.label x) (FieldDescriptorProto.type x) (FieldDescriptorProto.typeName x) (FieldDescriptorProto.extendee x) (FieldDescriptorProto.defaultValue x) (FieldDescriptorProto.oneofIndex x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.jsonName.getD arbitrary))) (FieldDescriptorProto.options x) (FieldDescriptorProto.proto3Optional x) )
  | 8 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk (FieldDescriptorProto.name x) (FieldDescriptorProto.number x) (FieldDescriptorProto.label x) (FieldDescriptorProto.type x) (FieldDescriptorProto.typeName x) (FieldDescriptorProto.extendee x) (FieldDescriptorProto.defaultValue x) (FieldDescriptorProto.oneofIndex x) (FieldDescriptorProto.jsonName x) ((← (fun v => LeanProto.EncDec.decodeMessage (FieldOptions__deserializeAux v)) (x.options.getD arbitrary))) (FieldDescriptorProto.proto3Optional x) )
  | 17 => do FieldDescriptorProto__deserializeAux (FieldDescriptorProto.mk (FieldDescriptorProto.name x) (FieldDescriptorProto.number x) (FieldDescriptorProto.label x) (FieldDescriptorProto.type x) (FieldDescriptorProto.typeName x) (FieldDescriptorProto.extendee x) (FieldDescriptorProto.defaultValue x) (FieldDescriptorProto.oneofIndex x) (FieldDescriptorProto.jsonName x) (FieldDescriptorProto.options x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.proto3Optional.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            FieldDescriptorProto__deserializeAux x


partial def OneofDescriptorProto__serializeAux (x: ByteArray) : OneofDescriptorProto -> ByteArray
| OneofDescriptorProto.mk a0 a1 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeMessage (OneofOptions__serializeAux)) 2 rfl 2) res a1
  return res


partial def OneofDescriptorProto__deserializeAux (x: OneofDescriptorProto) : LeanProto.EncDec.ProtoParseM OneofDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do OneofDescriptorProto__deserializeAux (OneofDescriptorProto.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.name.getD arbitrary))) (OneofDescriptorProto.options x) )
  | 2 => do OneofDescriptorProto__deserializeAux (OneofDescriptorProto.mk (OneofDescriptorProto.name x) ((← (fun v => LeanProto.EncDec.decodeMessage (OneofOptions__deserializeAux v)) (x.options.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            OneofDescriptorProto__deserializeAux x


partial def EnumDescriptorProto_EnumReservedRange__serializeAux (x: ByteArray) : EnumDescriptorProto_EnumReservedRange -> ByteArray
| EnumDescriptorProto_EnumReservedRange.mk a0 a1 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 2) res a1
  return res


partial def EnumDescriptorProto_EnumReservedRange__deserializeAux (x: EnumDescriptorProto_EnumReservedRange) : LeanProto.EncDec.ProtoParseM EnumDescriptorProto_EnumReservedRange := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do EnumDescriptorProto_EnumReservedRange__deserializeAux (EnumDescriptorProto_EnumReservedRange.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.start.getD arbitrary))) (EnumDescriptorProto_EnumReservedRange.endd x) )
  | 2 => do EnumDescriptorProto_EnumReservedRange__deserializeAux (EnumDescriptorProto_EnumReservedRange.mk (EnumDescriptorProto_EnumReservedRange.start x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.endd.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            EnumDescriptorProto_EnumReservedRange__deserializeAux x

partial def EnumDescriptorProto__serializeAux (x: ByteArray) : EnumDescriptorProto -> ByteArray
| EnumDescriptorProto.mk a0 a1 a2 a3 a4 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (EnumValueDescriptorProto__serializeAux)) 2 rfl 2 res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeMessage (EnumOptions__serializeAux)) 2 rfl 3) res a2
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (EnumDescriptorProto_EnumReservedRange__serializeAux)) 2 rfl 4 res a3
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeString) 2 rfl 5 res a4
  return res


partial def EnumDescriptorProto__deserializeAux (x: EnumDescriptorProto) : LeanProto.EncDec.ProtoParseM EnumDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do EnumDescriptorProto__deserializeAux (EnumDescriptorProto.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.name.getD arbitrary))) (EnumDescriptorProto.value x) (EnumDescriptorProto.options x) (EnumDescriptorProto.reservedRange x) (EnumDescriptorProto.reservedName x) )
  | 2 => do EnumDescriptorProto__deserializeAux (EnumDescriptorProto.mk (EnumDescriptorProto.name x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (EnumValueDescriptorProto__deserializeAux v)) arbitrary) typ  (x.value))) (EnumDescriptorProto.options x) (EnumDescriptorProto.reservedRange x) (EnumDescriptorProto.reservedName x) )
  | 3 => do EnumDescriptorProto__deserializeAux (EnumDescriptorProto.mk (EnumDescriptorProto.name x) (EnumDescriptorProto.value x) ((← (fun v => LeanProto.EncDec.decodeMessage (EnumOptions__deserializeAux v)) (x.options.getD arbitrary))) (EnumDescriptorProto.reservedRange x) (EnumDescriptorProto.reservedName x) )
  | 4 => do EnumDescriptorProto__deserializeAux (EnumDescriptorProto.mk (EnumDescriptorProto.name x) (EnumDescriptorProto.value x) (EnumDescriptorProto.options x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (EnumDescriptorProto_EnumReservedRange__deserializeAux v)) arbitrary) typ  (x.reservedRange))) (EnumDescriptorProto.reservedName x) )
  | 5 => do EnumDescriptorProto__deserializeAux (EnumDescriptorProto.mk (EnumDescriptorProto.name x) (EnumDescriptorProto.value x) (EnumDescriptorProto.options x) (EnumDescriptorProto.reservedRange x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) arbitrary) typ  (x.reservedName))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            EnumDescriptorProto__deserializeAux x


partial def EnumValueDescriptorProto__serializeAux (x: ByteArray) : EnumValueDescriptorProto -> ByteArray
| EnumValueDescriptorProto.mk a0 a1 a2 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 2) res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeMessage (EnumValueOptions__serializeAux)) 2 rfl 3) res a2
  return res


partial def EnumValueDescriptorProto__deserializeAux (x: EnumValueDescriptorProto) : LeanProto.EncDec.ProtoParseM EnumValueDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do EnumValueDescriptorProto__deserializeAux (EnumValueDescriptorProto.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.name.getD arbitrary))) (EnumValueDescriptorProto.number x) (EnumValueDescriptorProto.options x) )
  | 2 => do EnumValueDescriptorProto__deserializeAux (EnumValueDescriptorProto.mk (EnumValueDescriptorProto.name x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.number.getD arbitrary))) (EnumValueDescriptorProto.options x) )
  | 3 => do EnumValueDescriptorProto__deserializeAux (EnumValueDescriptorProto.mk (EnumValueDescriptorProto.name x) (EnumValueDescriptorProto.number x) ((← (fun v => LeanProto.EncDec.decodeMessage (EnumValueOptions__deserializeAux v)) (x.options.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            EnumValueDescriptorProto__deserializeAux x


partial def ServiceDescriptorProto__serializeAux (x: ByteArray) : ServiceDescriptorProto -> ByteArray
| ServiceDescriptorProto.mk a0 a1 a2 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (MethodDescriptorProto__serializeAux)) 2 rfl 2 res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeMessage (ServiceOptions__serializeAux)) 2 rfl 3) res a2
  return res


partial def ServiceDescriptorProto__deserializeAux (x: ServiceDescriptorProto) : LeanProto.EncDec.ProtoParseM ServiceDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do ServiceDescriptorProto__deserializeAux (ServiceDescriptorProto.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.name.getD arbitrary))) (ServiceDescriptorProto.method x) (ServiceDescriptorProto.options x) )
  | 2 => do ServiceDescriptorProto__deserializeAux (ServiceDescriptorProto.mk (ServiceDescriptorProto.name x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (MethodDescriptorProto__deserializeAux v)) arbitrary) typ  (x.method))) (ServiceDescriptorProto.options x) )
  | 3 => do ServiceDescriptorProto__deserializeAux (ServiceDescriptorProto.mk (ServiceDescriptorProto.name x) (ServiceDescriptorProto.method x) ((← (fun v => LeanProto.EncDec.decodeMessage (ServiceOptions__deserializeAux v)) (x.options.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            ServiceDescriptorProto__deserializeAux x


partial def MethodDescriptorProto__serializeAux (x: ByteArray) : MethodDescriptorProto -> ByteArray
| MethodDescriptorProto.mk a0 a1 a2 a3 a4 a5 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 2) res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 3) res a2
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeMessage (MethodOptions__serializeAux)) 2 rfl 4) res a3
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 5) res a4
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 6) res a5
  return res


partial def MethodDescriptorProto__deserializeAux (x: MethodDescriptorProto) : LeanProto.EncDec.ProtoParseM MethodDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do MethodDescriptorProto__deserializeAux (MethodDescriptorProto.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.name.getD arbitrary))) (MethodDescriptorProto.inputType x) (MethodDescriptorProto.outputType x) (MethodDescriptorProto.options x) (MethodDescriptorProto.clientStreaming x) (MethodDescriptorProto.serverStreaming x) )
  | 2 => do MethodDescriptorProto__deserializeAux (MethodDescriptorProto.mk (MethodDescriptorProto.name x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.inputType.getD arbitrary))) (MethodDescriptorProto.outputType x) (MethodDescriptorProto.options x) (MethodDescriptorProto.clientStreaming x) (MethodDescriptorProto.serverStreaming x) )
  | 3 => do MethodDescriptorProto__deserializeAux (MethodDescriptorProto.mk (MethodDescriptorProto.name x) (MethodDescriptorProto.inputType x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.outputType.getD arbitrary))) (MethodDescriptorProto.options x) (MethodDescriptorProto.clientStreaming x) (MethodDescriptorProto.serverStreaming x) )
  | 4 => do MethodDescriptorProto__deserializeAux (MethodDescriptorProto.mk (MethodDescriptorProto.name x) (MethodDescriptorProto.inputType x) (MethodDescriptorProto.outputType x) ((← (fun v => LeanProto.EncDec.decodeMessage (MethodOptions__deserializeAux v)) (x.options.getD arbitrary))) (MethodDescriptorProto.clientStreaming x) (MethodDescriptorProto.serverStreaming x) )
  | 5 => do MethodDescriptorProto__deserializeAux (MethodDescriptorProto.mk (MethodDescriptorProto.name x) (MethodDescriptorProto.inputType x) (MethodDescriptorProto.outputType x) (MethodDescriptorProto.options x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.clientStreaming.getD arbitrary))) (MethodDescriptorProto.serverStreaming x) )
  | 6 => do MethodDescriptorProto__deserializeAux (MethodDescriptorProto.mk (MethodDescriptorProto.name x) (MethodDescriptorProto.inputType x) (MethodDescriptorProto.outputType x) (MethodDescriptorProto.options x) (MethodDescriptorProto.clientStreaming x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.serverStreaming.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            MethodDescriptorProto__deserializeAux x


partial def FileOptions__serializeAux (x: ByteArray) : FileOptions -> ByteArray
| FileOptions.mk a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 8) res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 10) res a2
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 20) res a3
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 27) res a4
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeEnum) 0 rfl 9) res a5
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 11) res a6
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 16) res a7
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 17) res a8
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 18) res a9
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 42) res a10
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 23) res a11
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 31) res a12
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 36) res a13
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 37) res a14
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 39) res a15
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 40) res a16
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 41) res a17
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 44) res a18
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 45) res a19
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (UninterpretedOption__serializeAux)) 2 rfl 999 res a20
  return res


partial def FileOptions__deserializeAux (x: FileOptions) : LeanProto.EncDec.ProtoParseM FileOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do FileOptions__deserializeAux (FileOptions.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.javaPackage.getD arbitrary))) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 8 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.javaOuterClassname.getD arbitrary))) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 10 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.javaMultipleFiles.getD arbitrary))) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 20 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.javaGenerateEqualsAndHash.getD arbitrary))) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 27 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.javaStringCheckUtf8.getD arbitrary))) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 9 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) ((← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.decodeEnum (α:=FileOptions_OptimizeMode))) (x.optimizeFor.getD arbitrary))) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 11 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.goPackage.getD arbitrary))) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 16 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.ccGenericServices.getD arbitrary))) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 17 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.javaGenericServices.getD arbitrary))) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 18 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.pyGenericServices.getD arbitrary))) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 42 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.phpGenericServices.getD arbitrary))) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 23 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.deprecated.getD arbitrary))) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 31 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.ccEnableArenas.getD arbitrary))) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 36 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.objcClassPrefix.getD arbitrary))) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 37 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.csharpNamespace.getD arbitrary))) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 39 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.swiftPrefix.getD arbitrary))) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 40 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.phpClassPrefix.getD arbitrary))) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 41 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.phpNamespace.getD arbitrary))) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 44 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.phpMetadataNamespace.getD arbitrary))) (FileOptions.rubyPackage x) (FileOptions.uninterpretedOption x) )
  | 45 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.rubyPackage.getD arbitrary))) (FileOptions.uninterpretedOption x) )
  | 999 => do FileOptions__deserializeAux (FileOptions.mk (FileOptions.javaPackage x) (FileOptions.javaOuterClassname x) (FileOptions.javaMultipleFiles x) (FileOptions.javaGenerateEqualsAndHash x) (FileOptions.javaStringCheckUtf8 x) (FileOptions.optimizeFor x) (FileOptions.goPackage x) (FileOptions.ccGenericServices x) (FileOptions.javaGenericServices x) (FileOptions.pyGenericServices x) (FileOptions.phpGenericServices x) (FileOptions.deprecated x) (FileOptions.ccEnableArenas x) (FileOptions.objcClassPrefix x) (FileOptions.csharpNamespace x) (FileOptions.swiftPrefix x) (FileOptions.phpClassPrefix x) (FileOptions.phpNamespace x) (FileOptions.phpMetadataNamespace x) (FileOptions.rubyPackage x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (UninterpretedOption__deserializeAux v)) arbitrary) typ  (x.uninterpretedOption))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            FileOptions__deserializeAux x


partial def MessageOptions__serializeAux (x: ByteArray) : MessageOptions -> ByteArray
| MessageOptions.mk a0 a1 a2 a3 a4 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 2) res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 3) res a2
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 7) res a3
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (UninterpretedOption__serializeAux)) 2 rfl 999 res a4
  return res


partial def MessageOptions__deserializeAux (x: MessageOptions) : LeanProto.EncDec.ProtoParseM MessageOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do MessageOptions__deserializeAux (MessageOptions.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.messageSetWireFormat.getD arbitrary))) (MessageOptions.noStandardDescriptorAccessor x) (MessageOptions.deprecated x) (MessageOptions.mapEntry x) (MessageOptions.uninterpretedOption x) )
  | 2 => do MessageOptions__deserializeAux (MessageOptions.mk (MessageOptions.messageSetWireFormat x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.noStandardDescriptorAccessor.getD arbitrary))) (MessageOptions.deprecated x) (MessageOptions.mapEntry x) (MessageOptions.uninterpretedOption x) )
  | 3 => do MessageOptions__deserializeAux (MessageOptions.mk (MessageOptions.messageSetWireFormat x) (MessageOptions.noStandardDescriptorAccessor x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.deprecated.getD arbitrary))) (MessageOptions.mapEntry x) (MessageOptions.uninterpretedOption x) )
  | 7 => do MessageOptions__deserializeAux (MessageOptions.mk (MessageOptions.messageSetWireFormat x) (MessageOptions.noStandardDescriptorAccessor x) (MessageOptions.deprecated x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.mapEntry.getD arbitrary))) (MessageOptions.uninterpretedOption x) )
  | 999 => do MessageOptions__deserializeAux (MessageOptions.mk (MessageOptions.messageSetWireFormat x) (MessageOptions.noStandardDescriptorAccessor x) (MessageOptions.deprecated x) (MessageOptions.mapEntry x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (UninterpretedOption__deserializeAux v)) arbitrary) typ  (x.uninterpretedOption))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            MessageOptions__deserializeAux x


partial def FieldOptions__serializeAux (x: ByteArray) : FieldOptions -> ByteArray
| FieldOptions.mk a0 a1 a2 a3 a4 a5 a6 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeEnum) 0 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 2) res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeEnum) 0 rfl 6) res a2
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 5) res a3
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 3) res a4
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 10) res a5
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (UninterpretedOption__serializeAux)) 2 rfl 999 res a6
  return res


partial def FieldOptions__deserializeAux (x: FieldOptions) : LeanProto.EncDec.ProtoParseM FieldOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do FieldOptions__deserializeAux (FieldOptions.mk ((← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.decodeEnum (α:=FieldOptions_CType))) (x.ctype.getD arbitrary))) (FieldOptions.packed x) (FieldOptions.jstype x) (FieldOptions.lazy x) (FieldOptions.deprecated x) (FieldOptions.weak x) (FieldOptions.uninterpretedOption x) )
  | 2 => do FieldOptions__deserializeAux (FieldOptions.mk (FieldOptions.ctype x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.packed.getD arbitrary))) (FieldOptions.jstype x) (FieldOptions.lazy x) (FieldOptions.deprecated x) (FieldOptions.weak x) (FieldOptions.uninterpretedOption x) )
  | 6 => do FieldOptions__deserializeAux (FieldOptions.mk (FieldOptions.ctype x) (FieldOptions.packed x) ((← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.decodeEnum (α:=FieldOptions_JSType))) (x.jstype.getD arbitrary))) (FieldOptions.lazy x) (FieldOptions.deprecated x) (FieldOptions.weak x) (FieldOptions.uninterpretedOption x) )
  | 5 => do FieldOptions__deserializeAux (FieldOptions.mk (FieldOptions.ctype x) (FieldOptions.packed x) (FieldOptions.jstype x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.lazy.getD arbitrary))) (FieldOptions.deprecated x) (FieldOptions.weak x) (FieldOptions.uninterpretedOption x) )
  | 3 => do FieldOptions__deserializeAux (FieldOptions.mk (FieldOptions.ctype x) (FieldOptions.packed x) (FieldOptions.jstype x) (FieldOptions.lazy x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.deprecated.getD arbitrary))) (FieldOptions.weak x) (FieldOptions.uninterpretedOption x) )
  | 10 => do FieldOptions__deserializeAux (FieldOptions.mk (FieldOptions.ctype x) (FieldOptions.packed x) (FieldOptions.jstype x) (FieldOptions.lazy x) (FieldOptions.deprecated x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.weak.getD arbitrary))) (FieldOptions.uninterpretedOption x) )
  | 999 => do FieldOptions__deserializeAux (FieldOptions.mk (FieldOptions.ctype x) (FieldOptions.packed x) (FieldOptions.jstype x) (FieldOptions.lazy x) (FieldOptions.deprecated x) (FieldOptions.weak x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (UninterpretedOption__deserializeAux v)) arbitrary) typ  (x.uninterpretedOption))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            FieldOptions__deserializeAux x


partial def OneofOptions__serializeAux (x: ByteArray) : OneofOptions -> ByteArray
| OneofOptions.mk a0 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (UninterpretedOption__serializeAux)) 2 rfl 999 res a0
  return res


partial def OneofOptions__deserializeAux (x: OneofOptions) : LeanProto.EncDec.ProtoParseM OneofOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 999 => do OneofOptions__deserializeAux (OneofOptions.mk ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (UninterpretedOption__deserializeAux v)) arbitrary) typ  (x.uninterpretedOption))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            OneofOptions__deserializeAux x


partial def EnumOptions__serializeAux (x: ByteArray) : EnumOptions -> ByteArray
| EnumOptions.mk a0 a1 a2 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 2) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 3) res a1
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (UninterpretedOption__serializeAux)) 2 rfl 999 res a2
  return res


partial def EnumOptions__deserializeAux (x: EnumOptions) : LeanProto.EncDec.ProtoParseM EnumOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 2 => do EnumOptions__deserializeAux (EnumOptions.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.allowAlias.getD arbitrary))) (EnumOptions.deprecated x) (EnumOptions.uninterpretedOption x) )
  | 3 => do EnumOptions__deserializeAux (EnumOptions.mk (EnumOptions.allowAlias x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.deprecated.getD arbitrary))) (EnumOptions.uninterpretedOption x) )
  | 999 => do EnumOptions__deserializeAux (EnumOptions.mk (EnumOptions.allowAlias x) (EnumOptions.deprecated x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (UninterpretedOption__deserializeAux v)) arbitrary) typ  (x.uninterpretedOption))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            EnumOptions__deserializeAux x


partial def EnumValueOptions__serializeAux (x: ByteArray) : EnumValueOptions -> ByteArray
| EnumValueOptions.mk a0 a1 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 1) res a0
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (UninterpretedOption__serializeAux)) 2 rfl 999 res a1
  return res


partial def EnumValueOptions__deserializeAux (x: EnumValueOptions) : LeanProto.EncDec.ProtoParseM EnumValueOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do EnumValueOptions__deserializeAux (EnumValueOptions.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.deprecated.getD arbitrary))) (EnumValueOptions.uninterpretedOption x) )
  | 999 => do EnumValueOptions__deserializeAux (EnumValueOptions.mk (EnumValueOptions.deprecated x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (UninterpretedOption__deserializeAux v)) arbitrary) typ  (x.uninterpretedOption))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            EnumValueOptions__deserializeAux x


partial def ServiceOptions__serializeAux (x: ByteArray) : ServiceOptions -> ByteArray
| ServiceOptions.mk a0 a1 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 33) res a0
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (UninterpretedOption__serializeAux)) 2 rfl 999 res a1
  return res


partial def ServiceOptions__deserializeAux (x: ServiceOptions) : LeanProto.EncDec.ProtoParseM ServiceOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 33 => do ServiceOptions__deserializeAux (ServiceOptions.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.deprecated.getD arbitrary))) (ServiceOptions.uninterpretedOption x) )
  | 999 => do ServiceOptions__deserializeAux (ServiceOptions.mk (ServiceOptions.deprecated x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (UninterpretedOption__deserializeAux v)) arbitrary) typ  (x.uninterpretedOption))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            ServiceOptions__deserializeAux x


partial def MethodOptions__serializeAux (x: ByteArray) : MethodOptions -> ByteArray
| MethodOptions.mk a0 a1 a2 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 33) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeEnum) 0 rfl 34) res a1
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (UninterpretedOption__serializeAux)) 2 rfl 999 res a2
  return res


partial def MethodOptions__deserializeAux (x: MethodOptions) : LeanProto.EncDec.ProtoParseM MethodOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 33 => do MethodOptions__deserializeAux (MethodOptions.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.deprecated.getD arbitrary))) (MethodOptions.idempotencyLevel x) (MethodOptions.uninterpretedOption x) )
  | 34 => do MethodOptions__deserializeAux (MethodOptions.mk (MethodOptions.deprecated x) ((← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.decodeEnum (α:=MethodOptions_IdempotencyLevel))) (x.idempotencyLevel.getD arbitrary))) (MethodOptions.uninterpretedOption x) )
  | 999 => do MethodOptions__deserializeAux (MethodOptions.mk (MethodOptions.deprecated x) (MethodOptions.idempotencyLevel x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (UninterpretedOption__deserializeAux v)) arbitrary) typ  (x.uninterpretedOption))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            MethodOptions__deserializeAux x


partial def UninterpretedOption_NamePart__serializeAux (x: ByteArray) : UninterpretedOption_NamePart -> ByteArray
| UninterpretedOption_NamePart.mk a0 a1 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeBool) 0 rfl 2) res a1
  return res


partial def UninterpretedOption_NamePart__deserializeAux (x: UninterpretedOption_NamePart) : LeanProto.EncDec.ProtoParseM UninterpretedOption_NamePart := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do UninterpretedOption_NamePart__deserializeAux (UninterpretedOption_NamePart.mk ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.namePart.getD arbitrary))) (UninterpretedOption_NamePart.isExtension x) )
  | 2 => do UninterpretedOption_NamePart__deserializeAux (UninterpretedOption_NamePart.mk (UninterpretedOption_NamePart.namePart x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeBool) (x.isExtension.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            UninterpretedOption_NamePart__deserializeAux x

partial def UninterpretedOption__serializeAux (x: ByteArray) : UninterpretedOption -> ByteArray
| UninterpretedOption.mk a0 a1 a2 a3 a4 a5 a6 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (UninterpretedOption_NamePart__serializeAux)) 2 rfl 2 res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 3) res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeNatAsUInt64) 0 rfl 4) res a2
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt64) 0 rfl 5) res a3
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeFloatAsFloat64) 1 rfl 6) res a4
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeByteArray) 2 rfl 7) res a5
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 8) res a6
  return res


partial def UninterpretedOption__deserializeAux (x: UninterpretedOption) : LeanProto.EncDec.ProtoParseM UninterpretedOption := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 2 => do UninterpretedOption__deserializeAux (UninterpretedOption.mk ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (UninterpretedOption_NamePart__deserializeAux v)) arbitrary) typ  (x.name))) (UninterpretedOption.identifierValue x) (UninterpretedOption.positiveIntValue x) (UninterpretedOption.negativeIntValue x) (UninterpretedOption.doubleValue x) (UninterpretedOption.stringValue x) (UninterpretedOption.aggregateValue x) )
  | 3 => do UninterpretedOption__deserializeAux (UninterpretedOption.mk (UninterpretedOption.name x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.identifierValue.getD arbitrary))) (UninterpretedOption.positiveIntValue x) (UninterpretedOption.negativeIntValue x) (UninterpretedOption.doubleValue x) (UninterpretedOption.stringValue x) (UninterpretedOption.aggregateValue x) )
  | 4 => do UninterpretedOption__deserializeAux (UninterpretedOption.mk (UninterpretedOption.name x) (UninterpretedOption.identifierValue x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeUInt64AsNat) (x.positiveIntValue.getD arbitrary))) (UninterpretedOption.negativeIntValue x) (UninterpretedOption.doubleValue x) (UninterpretedOption.stringValue x) (UninterpretedOption.aggregateValue x) )
  | 5 => do UninterpretedOption__deserializeAux (UninterpretedOption.mk (UninterpretedOption.name x) (UninterpretedOption.identifierValue x) (UninterpretedOption.positiveIntValue x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt64AsInt) (x.negativeIntValue.getD arbitrary))) (UninterpretedOption.doubleValue x) (UninterpretedOption.stringValue x) (UninterpretedOption.aggregateValue x) )
  | 6 => do UninterpretedOption__deserializeAux (UninterpretedOption.mk (UninterpretedOption.name x) (UninterpretedOption.identifierValue x) (UninterpretedOption.positiveIntValue x) (UninterpretedOption.negativeIntValue x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeFloat64AsFloat) (x.doubleValue.getD arbitrary))) (UninterpretedOption.stringValue x) (UninterpretedOption.aggregateValue x) )
  | 7 => do UninterpretedOption__deserializeAux (UninterpretedOption.mk (UninterpretedOption.name x) (UninterpretedOption.identifierValue x) (UninterpretedOption.positiveIntValue x) (UninterpretedOption.negativeIntValue x) (UninterpretedOption.doubleValue x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeByteArray) (x.stringValue.getD arbitrary))) (UninterpretedOption.aggregateValue x) )
  | 8 => do UninterpretedOption__deserializeAux (UninterpretedOption.mk (UninterpretedOption.name x) (UninterpretedOption.identifierValue x) (UninterpretedOption.positiveIntValue x) (UninterpretedOption.negativeIntValue x) (UninterpretedOption.doubleValue x) (UninterpretedOption.stringValue x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.aggregateValue.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            UninterpretedOption__deserializeAux x


partial def SourceCodeInfo_Location__serializeAux (x: ByteArray) : SourceCodeInfo_Location -> ByteArray
| SourceCodeInfo_Location.mk a0 a1 a2 a3 a4 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeIfNonempty (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodePackedArray (LeanProto.EncDec.encodeIntAsInt32)) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeIfNonempty (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodePackedArray (LeanProto.EncDec.encodeIntAsInt32)) 2 rfl 2) res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 3) res a2
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 4) res a3
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeString) 2 rfl 6 res a4
  return res


partial def SourceCodeInfo_Location__deserializeAux (x: SourceCodeInfo_Location) : LeanProto.EncDec.ProtoParseM SourceCodeInfo_Location := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do SourceCodeInfo_Location__deserializeAux (SourceCodeInfo_Location.mk ((← LeanProto.EncDec.decodeKeyAndMixedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) arbitrary) typ  (x.path))) (SourceCodeInfo_Location.span x) (SourceCodeInfo_Location.leadingComments x) (SourceCodeInfo_Location.trailingComments x) (SourceCodeInfo_Location.leadingDetachedComments x) )
  | 2 => do SourceCodeInfo_Location__deserializeAux (SourceCodeInfo_Location.mk (SourceCodeInfo_Location.path x) ((← LeanProto.EncDec.decodeKeyAndMixedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) arbitrary) typ  (x.span))) (SourceCodeInfo_Location.leadingComments x) (SourceCodeInfo_Location.trailingComments x) (SourceCodeInfo_Location.leadingDetachedComments x) )
  | 3 => do SourceCodeInfo_Location__deserializeAux (SourceCodeInfo_Location.mk (SourceCodeInfo_Location.path x) (SourceCodeInfo_Location.span x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.leadingComments.getD arbitrary))) (SourceCodeInfo_Location.trailingComments x) (SourceCodeInfo_Location.leadingDetachedComments x) )
  | 4 => do SourceCodeInfo_Location__deserializeAux (SourceCodeInfo_Location.mk (SourceCodeInfo_Location.path x) (SourceCodeInfo_Location.span x) (SourceCodeInfo_Location.leadingComments x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.trailingComments.getD arbitrary))) (SourceCodeInfo_Location.leadingDetachedComments x) )
  | 6 => do SourceCodeInfo_Location__deserializeAux (SourceCodeInfo_Location.mk (SourceCodeInfo_Location.path x) (SourceCodeInfo_Location.span x) (SourceCodeInfo_Location.leadingComments x) (SourceCodeInfo_Location.trailingComments x) ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) arbitrary) typ  (x.leadingDetachedComments))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            SourceCodeInfo_Location__deserializeAux x

partial def SourceCodeInfo__serializeAux (x: ByteArray) : SourceCodeInfo -> ByteArray
| SourceCodeInfo.mk a0 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (SourceCodeInfo_Location__serializeAux)) 2 rfl 1 res a0
  return res


partial def SourceCodeInfo__deserializeAux (x: SourceCodeInfo) : LeanProto.EncDec.ProtoParseM SourceCodeInfo := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do SourceCodeInfo__deserializeAux (SourceCodeInfo.mk ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (SourceCodeInfo_Location__deserializeAux v)) arbitrary) typ  (x.location))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            SourceCodeInfo__deserializeAux x


partial def GeneratedCodeInfo_Annotation__serializeAux (x: ByteArray) : GeneratedCodeInfo_Annotation -> ByteArray
| GeneratedCodeInfo_Annotation.mk a0 a1 a2 a3 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeIfNonempty (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodePackedArray (LeanProto.EncDec.encodeIntAsInt32)) 2 rfl 1) res a0
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeString) 2 rfl 2) res a1
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 3) res a2
  res := LeanProto.EncDec.encodeOpt (LeanProto.EncDec.encodeWithTag (LeanProto.EncDec.encodeIntAsInt32) 0 rfl 4) res a3
  return res


partial def GeneratedCodeInfo_Annotation__deserializeAux (x: GeneratedCodeInfo_Annotation) : LeanProto.EncDec.ProtoParseM GeneratedCodeInfo_Annotation := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do GeneratedCodeInfo_Annotation__deserializeAux (GeneratedCodeInfo_Annotation.mk ((← LeanProto.EncDec.decodeKeyAndMixedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) arbitrary) typ  (x.path))) (GeneratedCodeInfo_Annotation.sourceFile x) (GeneratedCodeInfo_Annotation.begin x) (GeneratedCodeInfo_Annotation.endd x) )
  | 2 => do GeneratedCodeInfo_Annotation__deserializeAux (GeneratedCodeInfo_Annotation.mk (GeneratedCodeInfo_Annotation.path x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeString) (x.sourceFile.getD arbitrary))) (GeneratedCodeInfo_Annotation.begin x) (GeneratedCodeInfo_Annotation.endd x) )
  | 3 => do GeneratedCodeInfo_Annotation__deserializeAux (GeneratedCodeInfo_Annotation.mk (GeneratedCodeInfo_Annotation.path x) (GeneratedCodeInfo_Annotation.sourceFile x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.begin.getD arbitrary))) (GeneratedCodeInfo_Annotation.endd x) )
  | 4 => do GeneratedCodeInfo_Annotation__deserializeAux (GeneratedCodeInfo_Annotation.mk (GeneratedCodeInfo_Annotation.path x) (GeneratedCodeInfo_Annotation.sourceFile x) (GeneratedCodeInfo_Annotation.begin x) ((← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.decodeInt32AsInt) (x.endd.getD arbitrary))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            GeneratedCodeInfo_Annotation__deserializeAux x

partial def GeneratedCodeInfo__serializeAux (x: ByteArray) : GeneratedCodeInfo -> ByteArray
| GeneratedCodeInfo.mk a0 => do
  let mut res : ByteArray := Inhabited.default
  res := LeanProto.EncDec.encodeUnpackedArrayWithTag (LeanProto.EncDec.encodeMessage (GeneratedCodeInfo_Annotation__serializeAux)) 2 rfl 1 res a0
  return res


partial def GeneratedCodeInfo__deserializeAux (x: GeneratedCodeInfo) : LeanProto.EncDec.ProtoParseM GeneratedCodeInfo := do
  if (← LeanProto.EncDec.done) then return x
  let (typ, key) ← LeanProto.EncDec.decodeKey
  match key with
  | 1 => do GeneratedCodeInfo__deserializeAux (GeneratedCodeInfo.mk ((← LeanProto.EncDec.decodeKeyAndNonPackedArray ((fun v => LeanProto.EncDec.decodeMessage (GeneratedCodeInfo_Annotation__deserializeAux v)) arbitrary) typ  (x.annotation))) )
  | _ => do if (← LeanProto.EncDec.done) then throw $ IO.userError "EoF before unknown value"
            GeneratedCodeInfo__deserializeAux x


end

#eval "Defined encdec"

instance : LeanProto.ProtoSerialize FileDescriptorSet where
  serialize b := FileDescriptorSet__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize FileDescriptorSet where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (FileDescriptorSet__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize FileDescriptorProto where
  serialize b := FileDescriptorProto__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize FileDescriptorProto where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (FileDescriptorProto__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize DescriptorProto_ExtensionRange where
  serialize b := DescriptorProto_ExtensionRange__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize DescriptorProto_ExtensionRange where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (DescriptorProto_ExtensionRange__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize DescriptorProto_ReservedRange where
  serialize b := DescriptorProto_ReservedRange__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize DescriptorProto_ReservedRange where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (DescriptorProto_ReservedRange__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize DescriptorProto where
  serialize b := DescriptorProto__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize DescriptorProto where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (DescriptorProto__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize ExtensionRangeOptions where
  serialize b := ExtensionRangeOptions__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize ExtensionRangeOptions where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (ExtensionRangeOptions__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize FieldDescriptorProto where
  serialize b := FieldDescriptorProto__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize FieldDescriptorProto where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (FieldDescriptorProto__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize OneofDescriptorProto where
  serialize b := OneofDescriptorProto__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize OneofDescriptorProto where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (OneofDescriptorProto__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize EnumDescriptorProto_EnumReservedRange where
  serialize b := EnumDescriptorProto_EnumReservedRange__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize EnumDescriptorProto_EnumReservedRange where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (EnumDescriptorProto_EnumReservedRange__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize EnumDescriptorProto where
  serialize b := EnumDescriptorProto__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize EnumDescriptorProto where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (EnumDescriptorProto__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize EnumValueDescriptorProto where
  serialize b := EnumValueDescriptorProto__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize EnumValueDescriptorProto where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (EnumValueDescriptorProto__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize ServiceDescriptorProto where
  serialize b := ServiceDescriptorProto__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize ServiceDescriptorProto where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (ServiceDescriptorProto__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize MethodDescriptorProto where
  serialize b := MethodDescriptorProto__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize MethodDescriptorProto where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (MethodDescriptorProto__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize FileOptions where
  serialize b := FileOptions__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize FileOptions where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (FileOptions__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize MessageOptions where
  serialize b := MessageOptions__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize MessageOptions where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (MessageOptions__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize FieldOptions where
  serialize b := FieldOptions__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize FieldOptions where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (FieldOptions__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize OneofOptions where
  serialize b := OneofOptions__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize OneofOptions where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (OneofOptions__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize EnumOptions where
  serialize b := EnumOptions__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize EnumOptions where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (EnumOptions__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize EnumValueOptions where
  serialize b := EnumValueOptions__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize EnumValueOptions where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (EnumValueOptions__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize ServiceOptions where
  serialize b := ServiceOptions__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize ServiceOptions where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (ServiceOptions__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize MethodOptions where
  serialize b := MethodOptions__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize MethodOptions where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (MethodOptions__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize UninterpretedOption_NamePart where
  serialize b := UninterpretedOption_NamePart__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize UninterpretedOption_NamePart where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (UninterpretedOption_NamePart__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize UninterpretedOption where
  serialize b := UninterpretedOption__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize UninterpretedOption where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (UninterpretedOption__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize SourceCodeInfo_Location where
  serialize b := SourceCodeInfo_Location__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize SourceCodeInfo_Location where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (SourceCodeInfo_Location__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize SourceCodeInfo where
  serialize b := SourceCodeInfo__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize SourceCodeInfo where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (SourceCodeInfo__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize GeneratedCodeInfo_Annotation where
  serialize b := GeneratedCodeInfo_Annotation__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize GeneratedCodeInfo_Annotation where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (GeneratedCodeInfo_Annotation__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize GeneratedCodeInfo where
  serialize b := GeneratedCodeInfo__serializeAux (Inhabited.default) b

instance : LeanProto.ProtoDeserialize GeneratedCodeInfo where
  deserialize (b: ByteArray) :=
    let res := LeanProto.EncDec.decode b (GeneratedCodeInfo__deserializeAux Inhabited.default)
    LeanProto.EncDec.resultToExcept res

#eval "Defined instances"

end protobuf
end google

