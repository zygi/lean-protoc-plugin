-- Generated by the Lean protobuf compiler. Do not edit manually.
-- source: google/protobuf/descriptor.proto

import LeanProto
import Std.Data.AssocList


set_option maxHeartbeats 10000000
set_option maxRecDepth 2048
set_option synthInstance.maxHeartbeats 10000000
set_option genSizeOfSpec false

open Std (AssocList)

namespace LeanProtocPlugin.Google.Protobuf

inductive FieldDescriptorProto_Type where
| TYPE_DOUBLE : FieldDescriptorProto_Type
| TYPE_FLOAT : FieldDescriptorProto_Type
| TYPE_INT64 : FieldDescriptorProto_Type
| TYPE_UINT64 : FieldDescriptorProto_Type
| TYPE_INT32 : FieldDescriptorProto_Type
| TYPE_FIXED64 : FieldDescriptorProto_Type
| TYPE_FIXED32 : FieldDescriptorProto_Type
| TYPE_BOOL : FieldDescriptorProto_Type
| TYPE_STRING : FieldDescriptorProto_Type
| TYPE_GROUP : FieldDescriptorProto_Type
| TYPE_MESSAGE : FieldDescriptorProto_Type
| TYPE_BYTES : FieldDescriptorProto_Type
| TYPE_UINT32 : FieldDescriptorProto_Type
| TYPE_ENUM : FieldDescriptorProto_Type
| TYPE_SFIXED32 : FieldDescriptorProto_Type
| TYPE_SFIXED64 : FieldDescriptorProto_Type
| TYPE_SINT32 : FieldDescriptorProto_Type
| TYPE_SINT64 : FieldDescriptorProto_Type
deriving Repr, Inhabited, BEq

instance : LeanProto.ProtoEnum FieldDescriptorProto_Type where
  toInt
  | FieldDescriptorProto_Type.TYPE_DOUBLE => 1
  | FieldDescriptorProto_Type.TYPE_FLOAT => 2
  | FieldDescriptorProto_Type.TYPE_INT64 => 3
  | FieldDescriptorProto_Type.TYPE_UINT64 => 4
  | FieldDescriptorProto_Type.TYPE_INT32 => 5
  | FieldDescriptorProto_Type.TYPE_FIXED64 => 6
  | FieldDescriptorProto_Type.TYPE_FIXED32 => 7
  | FieldDescriptorProto_Type.TYPE_BOOL => 8
  | FieldDescriptorProto_Type.TYPE_STRING => 9
  | FieldDescriptorProto_Type.TYPE_GROUP => 10
  | FieldDescriptorProto_Type.TYPE_MESSAGE => 11
  | FieldDescriptorProto_Type.TYPE_BYTES => 12
  | FieldDescriptorProto_Type.TYPE_UINT32 => 13
  | FieldDescriptorProto_Type.TYPE_ENUM => 14
  | FieldDescriptorProto_Type.TYPE_SFIXED32 => 15
  | FieldDescriptorProto_Type.TYPE_SFIXED64 => 16
  | FieldDescriptorProto_Type.TYPE_SINT32 => 17
  | FieldDescriptorProto_Type.TYPE_SINT64 => 18

  ofInt
  | 1 => some FieldDescriptorProto_Type.TYPE_DOUBLE
  | 2 => some FieldDescriptorProto_Type.TYPE_FLOAT
  | 3 => some FieldDescriptorProto_Type.TYPE_INT64
  | 4 => some FieldDescriptorProto_Type.TYPE_UINT64
  | 5 => some FieldDescriptorProto_Type.TYPE_INT32
  | 6 => some FieldDescriptorProto_Type.TYPE_FIXED64
  | 7 => some FieldDescriptorProto_Type.TYPE_FIXED32
  | 8 => some FieldDescriptorProto_Type.TYPE_BOOL
  | 9 => some FieldDescriptorProto_Type.TYPE_STRING
  | 10 => some FieldDescriptorProto_Type.TYPE_GROUP
  | 11 => some FieldDescriptorProto_Type.TYPE_MESSAGE
  | 12 => some FieldDescriptorProto_Type.TYPE_BYTES
  | 13 => some FieldDescriptorProto_Type.TYPE_UINT32
  | 14 => some FieldDescriptorProto_Type.TYPE_ENUM
  | 15 => some FieldDescriptorProto_Type.TYPE_SFIXED32
  | 16 => some FieldDescriptorProto_Type.TYPE_SFIXED64
  | 17 => some FieldDescriptorProto_Type.TYPE_SINT32
  | 18 => some FieldDescriptorProto_Type.TYPE_SINT64
  | _ => none


inductive FieldDescriptorProto_Label where
| LABEL_OPTIONAL : FieldDescriptorProto_Label
| LABEL_REQUIRED : FieldDescriptorProto_Label
| LABEL_REPEATED : FieldDescriptorProto_Label
deriving Repr, Inhabited, BEq

instance : LeanProto.ProtoEnum FieldDescriptorProto_Label where
  toInt
  | FieldDescriptorProto_Label.LABEL_OPTIONAL => 1
  | FieldDescriptorProto_Label.LABEL_REQUIRED => 2
  | FieldDescriptorProto_Label.LABEL_REPEATED => 3

  ofInt
  | 1 => some FieldDescriptorProto_Label.LABEL_OPTIONAL
  | 2 => some FieldDescriptorProto_Label.LABEL_REQUIRED
  | 3 => some FieldDescriptorProto_Label.LABEL_REPEATED
  | _ => none


inductive FileOptions_OptimizeMode where
| SPEED : FileOptions_OptimizeMode
| CODE_SIZE : FileOptions_OptimizeMode
| LITE_RUNTIME : FileOptions_OptimizeMode
deriving Repr, Inhabited, BEq

instance : LeanProto.ProtoEnum FileOptions_OptimizeMode where
  toInt
  | FileOptions_OptimizeMode.SPEED => 1
  | FileOptions_OptimizeMode.CODE_SIZE => 2
  | FileOptions_OptimizeMode.LITE_RUNTIME => 3

  ofInt
  | 1 => some FileOptions_OptimizeMode.SPEED
  | 2 => some FileOptions_OptimizeMode.CODE_SIZE
  | 3 => some FileOptions_OptimizeMode.LITE_RUNTIME
  | _ => none


inductive FieldOptions_CType where
| STRING : FieldOptions_CType
| CORD : FieldOptions_CType
| STRING_PIECE : FieldOptions_CType
deriving Repr, Inhabited, BEq

instance : LeanProto.ProtoEnum FieldOptions_CType where
  toInt
  | FieldOptions_CType.STRING => 0
  | FieldOptions_CType.CORD => 1
  | FieldOptions_CType.STRING_PIECE => 2

  ofInt
  | 0 => some FieldOptions_CType.STRING
  | 1 => some FieldOptions_CType.CORD
  | 2 => some FieldOptions_CType.STRING_PIECE
  | _ => none


inductive FieldOptions_JSType where
| JS_NORMAL : FieldOptions_JSType
| JS_STRING : FieldOptions_JSType
| JS_NUMBER : FieldOptions_JSType
deriving Repr, Inhabited, BEq

instance : LeanProto.ProtoEnum FieldOptions_JSType where
  toInt
  | FieldOptions_JSType.JS_NORMAL => 0
  | FieldOptions_JSType.JS_STRING => 1
  | FieldOptions_JSType.JS_NUMBER => 2

  ofInt
  | 0 => some FieldOptions_JSType.JS_NORMAL
  | 1 => some FieldOptions_JSType.JS_STRING
  | 2 => some FieldOptions_JSType.JS_NUMBER
  | _ => none


inductive MethodOptions_IdempotencyLevel where
| IDEMPOTENCY_UNKNOWN : MethodOptions_IdempotencyLevel
| NO_SIDE_EFFECTS : MethodOptions_IdempotencyLevel
| IDEMPOTENT : MethodOptions_IdempotencyLevel
deriving Repr, Inhabited, BEq

instance : LeanProto.ProtoEnum MethodOptions_IdempotencyLevel where
  toInt
  | MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN => 0
  | MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS => 1
  | MethodOptions_IdempotencyLevel.IDEMPOTENT => 2

  ofInt
  | 0 => some MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN
  | 1 => some MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS
  | 2 => some MethodOptions_IdempotencyLevel.IDEMPOTENT
  | _ => none



mutual

-- Starting 
-- Starting FileDescriptorSet
inductive FileDescriptorSet where
| mk 
  (file : (Array (FileDescriptorProto)))
  : FileDescriptorSet

-- Starting FileDescriptorProto
inductive FileDescriptorProto where
| mk 
  (name : (String))
  (package : (String))
  (dependency : (Array (String)))
  (publicDependency : (Array (Int)))
  (weakDependency : (Array (Int)))
  (messageType : (Array (DescriptorProto)))
  (enumType : (Array (EnumDescriptorProto)))
  (service : (Array (ServiceDescriptorProto)))
  (extension : (Array (FieldDescriptorProto)))
  (options : (Option (FileOptions)))
  (sourceCodeInfo : (Option (SourceCodeInfo)))
  (_syntax : (String))
  : FileDescriptorProto

-- Starting DescriptorProto
inductive DescriptorProto where
| mk 
  (name : (String))
  (field : (Array (FieldDescriptorProto)))
  (extension : (Array (FieldDescriptorProto)))
  (nestedType : (Array (DescriptorProto)))
  (enumType : (Array (EnumDescriptorProto)))
  (extensionRange : (Array (DescriptorProto_ExtensionRange)))
  (oneofDecl : (Array (OneofDescriptorProto)))
  (options : (Option (MessageOptions)))
  (reservedRange : (Array (DescriptorProto_ReservedRange)))
  (reservedName : (Array (String)))
  : DescriptorProto

-- Starting DescriptorProto_ExtensionRange
inductive DescriptorProto_ExtensionRange where
| mk 
  (start : (Int))
  (_end : (Int))
  (options : (Option (ExtensionRangeOptions)))
  : DescriptorProto_ExtensionRange

-- Starting DescriptorProto_ReservedRange
inductive DescriptorProto_ReservedRange where
| mk 
  (start : (Int))
  (_end : (Int))
  : DescriptorProto_ReservedRange

-- Starting ExtensionRangeOptions
inductive ExtensionRangeOptions where
| mk 
  (uninterpretedOption : (Array (UninterpretedOption)))
  : ExtensionRangeOptions

-- Starting FieldDescriptorProto
inductive FieldDescriptorProto where
| mk 
  (name : (String))
  (number : (Int))
  (label : (FieldDescriptorProto_Label))
  (type : (FieldDescriptorProto_Type))
  (typeName : (String))
  (extendee : (String))
  (defaultValue : (String))
  (oneofIndex : (Int))
  (jsonName : (String))
  (options : (Option (FieldOptions)))
  (proto3Optional : (Bool))
  : FieldDescriptorProto

-- Starting OneofDescriptorProto
inductive OneofDescriptorProto where
| mk 
  (name : (String))
  (options : (Option (OneofOptions)))
  : OneofDescriptorProto

-- Starting EnumDescriptorProto
inductive EnumDescriptorProto where
| mk 
  (name : (String))
  (value : (Array (EnumValueDescriptorProto)))
  (options : (Option (EnumOptions)))
  (reservedRange : (Array (EnumDescriptorProto_EnumReservedRange)))
  (reservedName : (Array (String)))
  : EnumDescriptorProto

-- Starting EnumDescriptorProto_EnumReservedRange
inductive EnumDescriptorProto_EnumReservedRange where
| mk 
  (start : (Int))
  (_end : (Int))
  : EnumDescriptorProto_EnumReservedRange

-- Starting EnumValueDescriptorProto
inductive EnumValueDescriptorProto where
| mk 
  (name : (String))
  (number : (Int))
  (options : (Option (EnumValueOptions)))
  : EnumValueDescriptorProto

-- Starting ServiceDescriptorProto
inductive ServiceDescriptorProto where
| mk 
  (name : (String))
  (method : (Array (MethodDescriptorProto)))
  (options : (Option (ServiceOptions)))
  : ServiceDescriptorProto

-- Starting MethodDescriptorProto
inductive MethodDescriptorProto where
| mk 
  (name : (String))
  (inputType : (String))
  (outputType : (String))
  (options : (Option (MethodOptions)))
  (clientStreaming : (Bool))
  (serverStreaming : (Bool))
  : MethodDescriptorProto

-- Starting FileOptions
inductive FileOptions where
| mk 
  (javaPackage : (String))
  (javaOuterClassname : (String))
  (javaMultipleFiles : (Bool))
  (javaGenerateEqualsAndHash : (Bool))
  (javaStringCheckUtf8 : (Bool))
  (optimizeFor : (FileOptions_OptimizeMode))
  (goPackage : (String))
  (ccGenericServices : (Bool))
  (javaGenericServices : (Bool))
  (pyGenericServices : (Bool))
  (phpGenericServices : (Bool))
  (deprecated : (Bool))
  (ccEnableArenas : (Bool))
  (objcClassPrefix : (String))
  (csharpNamespace : (String))
  (swiftPrefix : (String))
  (phpClassPrefix : (String))
  (phpNamespace : (String))
  (phpMetadataNamespace : (String))
  (rubyPackage : (String))
  (uninterpretedOption : (Array (UninterpretedOption)))
  : FileOptions

-- Starting MessageOptions
inductive MessageOptions where
| mk 
  (messageSetWireFormat : (Bool))
  (noStandardDescriptorAccessor : (Bool))
  (deprecated : (Bool))
  (mapEntry : (Bool))
  (uninterpretedOption : (Array (UninterpretedOption)))
  : MessageOptions

-- Starting FieldOptions
inductive FieldOptions where
| mk 
  (ctype : (FieldOptions_CType))
  (packed : (Bool))
  (jstype : (FieldOptions_JSType))
  (lazy : (Bool))
  (deprecated : (Bool))
  (weak : (Bool))
  (uninterpretedOption : (Array (UninterpretedOption)))
  : FieldOptions

-- Starting OneofOptions
inductive OneofOptions where
| mk 
  (uninterpretedOption : (Array (UninterpretedOption)))
  : OneofOptions

-- Starting EnumOptions
inductive EnumOptions where
| mk 
  (allowAlias : (Bool))
  (deprecated : (Bool))
  (uninterpretedOption : (Array (UninterpretedOption)))
  : EnumOptions

-- Starting EnumValueOptions
inductive EnumValueOptions where
| mk 
  (deprecated : (Bool))
  (uninterpretedOption : (Array (UninterpretedOption)))
  : EnumValueOptions

-- Starting ServiceOptions
inductive ServiceOptions where
| mk 
  (deprecated : (Bool))
  (uninterpretedOption : (Array (UninterpretedOption)))
  : ServiceOptions

-- Starting MethodOptions
inductive MethodOptions where
| mk 
  (deprecated : (Bool))
  (idempotencyLevel : (MethodOptions_IdempotencyLevel))
  (uninterpretedOption : (Array (UninterpretedOption)))
  : MethodOptions

-- Starting UninterpretedOption
inductive UninterpretedOption where
| mk 
  (name : (Array (UninterpretedOption_NamePart)))
  (identifierValue : (String))
  (positiveIntValue : (Nat))
  (negativeIntValue : (Int))
  (doubleValue : (Float))
  (stringValue : (ByteArray))
  (aggregateValue : (String))
  : UninterpretedOption

-- Starting UninterpretedOption_NamePart
inductive UninterpretedOption_NamePart where
| mk 
  (namePart : (String))
  (isExtension : (Bool))
  : UninterpretedOption_NamePart

-- Starting SourceCodeInfo
inductive SourceCodeInfo where
| mk 
  (location : (Array (SourceCodeInfo_Location)))
  : SourceCodeInfo

-- Starting SourceCodeInfo_Location
inductive SourceCodeInfo_Location where
| mk 
  (path : (Array (Int)))
  (span : (Array (Int)))
  (leadingComments : (String))
  (trailingComments : (String))
  (leadingDetachedComments : (Array (String)))
  : SourceCodeInfo_Location

-- Starting GeneratedCodeInfo
inductive GeneratedCodeInfo where
| mk 
  (annotation : (Array (GeneratedCodeInfo_Annotation)))
  : GeneratedCodeInfo

-- Starting GeneratedCodeInfo_Annotation
inductive GeneratedCodeInfo_Annotation where
| mk 
  (path : (Array (Int)))
  (sourceFile : (String))
  (_begin : (Int))
  (_end : (Int))
  : GeneratedCodeInfo_Annotation


end

def FileDescriptorSet.mkDefault : FileDescriptorSet := 
  FileDescriptorSet.mk arbitrary
instance : Inhabited FileDescriptorSet where 
  default := FileDescriptorSet.mkDefault
def FileDescriptorSet.file : FileDescriptorSet → (Array (FileDescriptorProto))
| mk v0 => v0
def FileDescriptorSet.set_file (orig: FileDescriptorSet) (val: (Array (FileDescriptorProto)))
  : FileDescriptorSet := match orig with
| mk v0 => FileDescriptorSet.mk val
def FileDescriptorProto.mkDefault : FileDescriptorProto := 
  FileDescriptorProto.mk arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary none none arbitrary
instance : Inhabited FileDescriptorProto where 
  default := FileDescriptorProto.mkDefault
def FileDescriptorProto.name : FileDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v0
def FileDescriptorProto.set_name (orig: FileDescriptorProto) (val: (String))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk val v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11
def FileDescriptorProto.package : FileDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v1
def FileDescriptorProto.set_package (orig: FileDescriptorProto) (val: (String))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 val v2 v3 v4 v5 v6 v7 v8 v9 v10 v11
def FileDescriptorProto.dependency : FileDescriptorProto → (Array (String))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v2
def FileDescriptorProto.set_dependency (orig: FileDescriptorProto) (val: (Array (String)))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 v1 val v3 v4 v5 v6 v7 v8 v9 v10 v11
def FileDescriptorProto.publicDependency : FileDescriptorProto → (Array (Int))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v3
def FileDescriptorProto.set_publicDependency (orig: FileDescriptorProto) (val: (Array (Int)))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 v1 v2 val v4 v5 v6 v7 v8 v9 v10 v11
def FileDescriptorProto.weakDependency : FileDescriptorProto → (Array (Int))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v4
def FileDescriptorProto.set_weakDependency (orig: FileDescriptorProto) (val: (Array (Int)))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 v1 v2 v3 val v5 v6 v7 v8 v9 v10 v11
def FileDescriptorProto.messageType : FileDescriptorProto → (Array (DescriptorProto))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v5
def FileDescriptorProto.set_messageType (orig: FileDescriptorProto) (val: (Array (DescriptorProto)))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 v1 v2 v3 v4 val v6 v7 v8 v9 v10 v11
def FileDescriptorProto.enumType : FileDescriptorProto → (Array (EnumDescriptorProto))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v6
def FileDescriptorProto.set_enumType (orig: FileDescriptorProto) (val: (Array (EnumDescriptorProto)))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 v1 v2 v3 v4 v5 val v7 v8 v9 v10 v11
def FileDescriptorProto.service : FileDescriptorProto → (Array (ServiceDescriptorProto))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v7
def FileDescriptorProto.set_service (orig: FileDescriptorProto) (val: (Array (ServiceDescriptorProto)))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 val v8 v9 v10 v11
def FileDescriptorProto.extension : FileDescriptorProto → (Array (FieldDescriptorProto))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v8
def FileDescriptorProto.set_extension (orig: FileDescriptorProto) (val: (Array (FieldDescriptorProto)))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 val v9 v10 v11
def FileDescriptorProto.options : FileDescriptorProto → (Option (FileOptions))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v9
def FileDescriptorProto.set_options (orig: FileDescriptorProto) (val: (Option (FileOptions)))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 val v10 v11
def FileDescriptorProto.sourceCodeInfo : FileDescriptorProto → (Option (SourceCodeInfo))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v10
def FileDescriptorProto.set_sourceCodeInfo (orig: FileDescriptorProto) (val: (Option (SourceCodeInfo)))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 val v11
def FileDescriptorProto._syntax : FileDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => v11
def FileDescriptorProto.set__syntax (orig: FileDescriptorProto) (val: (String))
  : FileDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => FileDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 val
def DescriptorProto.mkDefault : DescriptorProto := 
  DescriptorProto.mk arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary none arbitrary arbitrary
instance : Inhabited DescriptorProto where 
  default := DescriptorProto.mkDefault
def DescriptorProto.name : DescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => v0
def DescriptorProto.set_name (orig: DescriptorProto) (val: (String))
  : DescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => DescriptorProto.mk val v1 v2 v3 v4 v5 v6 v7 v8 v9
def DescriptorProto.field : DescriptorProto → (Array (FieldDescriptorProto))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => v1
def DescriptorProto.set_field (orig: DescriptorProto) (val: (Array (FieldDescriptorProto)))
  : DescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => DescriptorProto.mk v0 val v2 v3 v4 v5 v6 v7 v8 v9
def DescriptorProto.extension : DescriptorProto → (Array (FieldDescriptorProto))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => v2
def DescriptorProto.set_extension (orig: DescriptorProto) (val: (Array (FieldDescriptorProto)))
  : DescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => DescriptorProto.mk v0 v1 val v3 v4 v5 v6 v7 v8 v9
def DescriptorProto.nestedType : DescriptorProto → (Array (DescriptorProto))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => v3
def DescriptorProto.set_nestedType (orig: DescriptorProto) (val: (Array (DescriptorProto)))
  : DescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => DescriptorProto.mk v0 v1 v2 val v4 v5 v6 v7 v8 v9
def DescriptorProto.enumType : DescriptorProto → (Array (EnumDescriptorProto))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => v4
def DescriptorProto.set_enumType (orig: DescriptorProto) (val: (Array (EnumDescriptorProto)))
  : DescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => DescriptorProto.mk v0 v1 v2 v3 val v5 v6 v7 v8 v9
def DescriptorProto.extensionRange : DescriptorProto → (Array (DescriptorProto_ExtensionRange))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => v5
def DescriptorProto.set_extensionRange (orig: DescriptorProto) (val: (Array (DescriptorProto_ExtensionRange)))
  : DescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => DescriptorProto.mk v0 v1 v2 v3 v4 val v6 v7 v8 v9
def DescriptorProto.oneofDecl : DescriptorProto → (Array (OneofDescriptorProto))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => v6
def DescriptorProto.set_oneofDecl (orig: DescriptorProto) (val: (Array (OneofDescriptorProto)))
  : DescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => DescriptorProto.mk v0 v1 v2 v3 v4 v5 val v7 v8 v9
def DescriptorProto.options : DescriptorProto → (Option (MessageOptions))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => v7
def DescriptorProto.set_options (orig: DescriptorProto) (val: (Option (MessageOptions)))
  : DescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => DescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 val v8 v9
def DescriptorProto.reservedRange : DescriptorProto → (Array (DescriptorProto_ReservedRange))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => v8
def DescriptorProto.set_reservedRange (orig: DescriptorProto) (val: (Array (DescriptorProto_ReservedRange)))
  : DescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => DescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 val v9
def DescriptorProto.reservedName : DescriptorProto → (Array (String))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => v9
def DescriptorProto.set_reservedName (orig: DescriptorProto) (val: (Array (String)))
  : DescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => DescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 val
def DescriptorProto_ExtensionRange.mkDefault : DescriptorProto_ExtensionRange := 
  DescriptorProto_ExtensionRange.mk arbitrary arbitrary none
instance : Inhabited DescriptorProto_ExtensionRange where 
  default := DescriptorProto_ExtensionRange.mkDefault
def DescriptorProto_ExtensionRange.start : DescriptorProto_ExtensionRange → (Int)
| mk v0 v1 v2 => v0
def DescriptorProto_ExtensionRange.set_start (orig: DescriptorProto_ExtensionRange) (val: (Int))
  : DescriptorProto_ExtensionRange := match orig with
| mk v0 v1 v2 => DescriptorProto_ExtensionRange.mk val v1 v2
def DescriptorProto_ExtensionRange._end : DescriptorProto_ExtensionRange → (Int)
| mk v0 v1 v2 => v1
def DescriptorProto_ExtensionRange.set__end (orig: DescriptorProto_ExtensionRange) (val: (Int))
  : DescriptorProto_ExtensionRange := match orig with
| mk v0 v1 v2 => DescriptorProto_ExtensionRange.mk v0 val v2
def DescriptorProto_ExtensionRange.options : DescriptorProto_ExtensionRange → (Option (ExtensionRangeOptions))
| mk v0 v1 v2 => v2
def DescriptorProto_ExtensionRange.set_options (orig: DescriptorProto_ExtensionRange) (val: (Option (ExtensionRangeOptions)))
  : DescriptorProto_ExtensionRange := match orig with
| mk v0 v1 v2 => DescriptorProto_ExtensionRange.mk v0 v1 val
def DescriptorProto_ReservedRange.mkDefault : DescriptorProto_ReservedRange := 
  DescriptorProto_ReservedRange.mk arbitrary arbitrary
instance : Inhabited DescriptorProto_ReservedRange where 
  default := DescriptorProto_ReservedRange.mkDefault
def DescriptorProto_ReservedRange.start : DescriptorProto_ReservedRange → (Int)
| mk v0 v1 => v0
def DescriptorProto_ReservedRange.set_start (orig: DescriptorProto_ReservedRange) (val: (Int))
  : DescriptorProto_ReservedRange := match orig with
| mk v0 v1 => DescriptorProto_ReservedRange.mk val v1
def DescriptorProto_ReservedRange._end : DescriptorProto_ReservedRange → (Int)
| mk v0 v1 => v1
def DescriptorProto_ReservedRange.set__end (orig: DescriptorProto_ReservedRange) (val: (Int))
  : DescriptorProto_ReservedRange := match orig with
| mk v0 v1 => DescriptorProto_ReservedRange.mk v0 val
def ExtensionRangeOptions.mkDefault : ExtensionRangeOptions := 
  ExtensionRangeOptions.mk arbitrary
instance : Inhabited ExtensionRangeOptions where 
  default := ExtensionRangeOptions.mkDefault
def ExtensionRangeOptions.uninterpretedOption : ExtensionRangeOptions → (Array (UninterpretedOption))
| mk v0 => v0
def ExtensionRangeOptions.set_uninterpretedOption (orig: ExtensionRangeOptions) (val: (Array (UninterpretedOption)))
  : ExtensionRangeOptions := match orig with
| mk v0 => ExtensionRangeOptions.mk val
def FieldDescriptorProto.mkDefault : FieldDescriptorProto := 
  FieldDescriptorProto.mk arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary (-1) arbitrary none arbitrary
instance : Inhabited FieldDescriptorProto where 
  default := FieldDescriptorProto.mkDefault
def FieldDescriptorProto.name : FieldDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v0
def FieldDescriptorProto.set_name (orig: FieldDescriptorProto) (val: (String))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk val v1 v2 v3 v4 v5 v6 v7 v8 v9 v10
def FieldDescriptorProto.number : FieldDescriptorProto → (Int)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v1
def FieldDescriptorProto.set_number (orig: FieldDescriptorProto) (val: (Int))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk v0 val v2 v3 v4 v5 v6 v7 v8 v9 v10
def FieldDescriptorProto.label : FieldDescriptorProto → (FieldDescriptorProto_Label)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v2
def FieldDescriptorProto.set_label (orig: FieldDescriptorProto) (val: (FieldDescriptorProto_Label))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk v0 v1 val v3 v4 v5 v6 v7 v8 v9 v10
def FieldDescriptorProto.type : FieldDescriptorProto → (FieldDescriptorProto_Type)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v3
def FieldDescriptorProto.set_type (orig: FieldDescriptorProto) (val: (FieldDescriptorProto_Type))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk v0 v1 v2 val v4 v5 v6 v7 v8 v9 v10
def FieldDescriptorProto.typeName : FieldDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v4
def FieldDescriptorProto.set_typeName (orig: FieldDescriptorProto) (val: (String))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk v0 v1 v2 v3 val v5 v6 v7 v8 v9 v10
def FieldDescriptorProto.extendee : FieldDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v5
def FieldDescriptorProto.set_extendee (orig: FieldDescriptorProto) (val: (String))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk v0 v1 v2 v3 v4 val v6 v7 v8 v9 v10
def FieldDescriptorProto.defaultValue : FieldDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v6
def FieldDescriptorProto.set_defaultValue (orig: FieldDescriptorProto) (val: (String))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk v0 v1 v2 v3 v4 v5 val v7 v8 v9 v10
def FieldDescriptorProto.oneofIndex : FieldDescriptorProto → (Int)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v7
def FieldDescriptorProto.set_oneofIndex (orig: FieldDescriptorProto) (val: (Int))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 val v8 v9 v10
def FieldDescriptorProto.jsonName : FieldDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v8
def FieldDescriptorProto.set_jsonName (orig: FieldDescriptorProto) (val: (String))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 val v9 v10
def FieldDescriptorProto.options : FieldDescriptorProto → (Option (FieldOptions))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v9
def FieldDescriptorProto.set_options (orig: FieldDescriptorProto) (val: (Option (FieldOptions)))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 val v10
def FieldDescriptorProto.proto3Optional : FieldDescriptorProto → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => v10
def FieldDescriptorProto.set_proto3Optional (orig: FieldDescriptorProto) (val: (Bool))
  : FieldDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => FieldDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 val
def OneofDescriptorProto.mkDefault : OneofDescriptorProto := 
  OneofDescriptorProto.mk arbitrary none
instance : Inhabited OneofDescriptorProto where 
  default := OneofDescriptorProto.mkDefault
def OneofDescriptorProto.name : OneofDescriptorProto → (String)
| mk v0 v1 => v0
def OneofDescriptorProto.set_name (orig: OneofDescriptorProto) (val: (String))
  : OneofDescriptorProto := match orig with
| mk v0 v1 => OneofDescriptorProto.mk val v1
def OneofDescriptorProto.options : OneofDescriptorProto → (Option (OneofOptions))
| mk v0 v1 => v1
def OneofDescriptorProto.set_options (orig: OneofDescriptorProto) (val: (Option (OneofOptions)))
  : OneofDescriptorProto := match orig with
| mk v0 v1 => OneofDescriptorProto.mk v0 val
def EnumDescriptorProto.mkDefault : EnumDescriptorProto := 
  EnumDescriptorProto.mk arbitrary arbitrary none arbitrary arbitrary
instance : Inhabited EnumDescriptorProto where 
  default := EnumDescriptorProto.mkDefault
def EnumDescriptorProto.name : EnumDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 => v0
def EnumDescriptorProto.set_name (orig: EnumDescriptorProto) (val: (String))
  : EnumDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 => EnumDescriptorProto.mk val v1 v2 v3 v4
def EnumDescriptorProto.value : EnumDescriptorProto → (Array (EnumValueDescriptorProto))
| mk v0 v1 v2 v3 v4 => v1
def EnumDescriptorProto.set_value (orig: EnumDescriptorProto) (val: (Array (EnumValueDescriptorProto)))
  : EnumDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 => EnumDescriptorProto.mk v0 val v2 v3 v4
def EnumDescriptorProto.options : EnumDescriptorProto → (Option (EnumOptions))
| mk v0 v1 v2 v3 v4 => v2
def EnumDescriptorProto.set_options (orig: EnumDescriptorProto) (val: (Option (EnumOptions)))
  : EnumDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 => EnumDescriptorProto.mk v0 v1 val v3 v4
def EnumDescriptorProto.reservedRange : EnumDescriptorProto → (Array (EnumDescriptorProto_EnumReservedRange))
| mk v0 v1 v2 v3 v4 => v3
def EnumDescriptorProto.set_reservedRange (orig: EnumDescriptorProto) (val: (Array (EnumDescriptorProto_EnumReservedRange)))
  : EnumDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 => EnumDescriptorProto.mk v0 v1 v2 val v4
def EnumDescriptorProto.reservedName : EnumDescriptorProto → (Array (String))
| mk v0 v1 v2 v3 v4 => v4
def EnumDescriptorProto.set_reservedName (orig: EnumDescriptorProto) (val: (Array (String)))
  : EnumDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 => EnumDescriptorProto.mk v0 v1 v2 v3 val
def EnumDescriptorProto_EnumReservedRange.mkDefault : EnumDescriptorProto_EnumReservedRange := 
  EnumDescriptorProto_EnumReservedRange.mk arbitrary arbitrary
instance : Inhabited EnumDescriptorProto_EnumReservedRange where 
  default := EnumDescriptorProto_EnumReservedRange.mkDefault
def EnumDescriptorProto_EnumReservedRange.start : EnumDescriptorProto_EnumReservedRange → (Int)
| mk v0 v1 => v0
def EnumDescriptorProto_EnumReservedRange.set_start (orig: EnumDescriptorProto_EnumReservedRange) (val: (Int))
  : EnumDescriptorProto_EnumReservedRange := match orig with
| mk v0 v1 => EnumDescriptorProto_EnumReservedRange.mk val v1
def EnumDescriptorProto_EnumReservedRange._end : EnumDescriptorProto_EnumReservedRange → (Int)
| mk v0 v1 => v1
def EnumDescriptorProto_EnumReservedRange.set__end (orig: EnumDescriptorProto_EnumReservedRange) (val: (Int))
  : EnumDescriptorProto_EnumReservedRange := match orig with
| mk v0 v1 => EnumDescriptorProto_EnumReservedRange.mk v0 val
def EnumValueDescriptorProto.mkDefault : EnumValueDescriptorProto := 
  EnumValueDescriptorProto.mk arbitrary arbitrary none
instance : Inhabited EnumValueDescriptorProto where 
  default := EnumValueDescriptorProto.mkDefault
def EnumValueDescriptorProto.name : EnumValueDescriptorProto → (String)
| mk v0 v1 v2 => v0
def EnumValueDescriptorProto.set_name (orig: EnumValueDescriptorProto) (val: (String))
  : EnumValueDescriptorProto := match orig with
| mk v0 v1 v2 => EnumValueDescriptorProto.mk val v1 v2
def EnumValueDescriptorProto.number : EnumValueDescriptorProto → (Int)
| mk v0 v1 v2 => v1
def EnumValueDescriptorProto.set_number (orig: EnumValueDescriptorProto) (val: (Int))
  : EnumValueDescriptorProto := match orig with
| mk v0 v1 v2 => EnumValueDescriptorProto.mk v0 val v2
def EnumValueDescriptorProto.options : EnumValueDescriptorProto → (Option (EnumValueOptions))
| mk v0 v1 v2 => v2
def EnumValueDescriptorProto.set_options (orig: EnumValueDescriptorProto) (val: (Option (EnumValueOptions)))
  : EnumValueDescriptorProto := match orig with
| mk v0 v1 v2 => EnumValueDescriptorProto.mk v0 v1 val
def ServiceDescriptorProto.mkDefault : ServiceDescriptorProto := 
  ServiceDescriptorProto.mk arbitrary arbitrary none
instance : Inhabited ServiceDescriptorProto where 
  default := ServiceDescriptorProto.mkDefault
def ServiceDescriptorProto.name : ServiceDescriptorProto → (String)
| mk v0 v1 v2 => v0
def ServiceDescriptorProto.set_name (orig: ServiceDescriptorProto) (val: (String))
  : ServiceDescriptorProto := match orig with
| mk v0 v1 v2 => ServiceDescriptorProto.mk val v1 v2
def ServiceDescriptorProto.method : ServiceDescriptorProto → (Array (MethodDescriptorProto))
| mk v0 v1 v2 => v1
def ServiceDescriptorProto.set_method (orig: ServiceDescriptorProto) (val: (Array (MethodDescriptorProto)))
  : ServiceDescriptorProto := match orig with
| mk v0 v1 v2 => ServiceDescriptorProto.mk v0 val v2
def ServiceDescriptorProto.options : ServiceDescriptorProto → (Option (ServiceOptions))
| mk v0 v1 v2 => v2
def ServiceDescriptorProto.set_options (orig: ServiceDescriptorProto) (val: (Option (ServiceOptions)))
  : ServiceDescriptorProto := match orig with
| mk v0 v1 v2 => ServiceDescriptorProto.mk v0 v1 val
def MethodDescriptorProto.mkDefault : MethodDescriptorProto := 
  MethodDescriptorProto.mk arbitrary arbitrary arbitrary none (false) (false)
instance : Inhabited MethodDescriptorProto where 
  default := MethodDescriptorProto.mkDefault
def MethodDescriptorProto.name : MethodDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 => v0
def MethodDescriptorProto.set_name (orig: MethodDescriptorProto) (val: (String))
  : MethodDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 => MethodDescriptorProto.mk val v1 v2 v3 v4 v5
def MethodDescriptorProto.inputType : MethodDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 => v1
def MethodDescriptorProto.set_inputType (orig: MethodDescriptorProto) (val: (String))
  : MethodDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 => MethodDescriptorProto.mk v0 val v2 v3 v4 v5
def MethodDescriptorProto.outputType : MethodDescriptorProto → (String)
| mk v0 v1 v2 v3 v4 v5 => v2
def MethodDescriptorProto.set_outputType (orig: MethodDescriptorProto) (val: (String))
  : MethodDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 => MethodDescriptorProto.mk v0 v1 val v3 v4 v5
def MethodDescriptorProto.options : MethodDescriptorProto → (Option (MethodOptions))
| mk v0 v1 v2 v3 v4 v5 => v3
def MethodDescriptorProto.set_options (orig: MethodDescriptorProto) (val: (Option (MethodOptions)))
  : MethodDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 => MethodDescriptorProto.mk v0 v1 v2 val v4 v5
def MethodDescriptorProto.clientStreaming : MethodDescriptorProto → (Bool)
| mk v0 v1 v2 v3 v4 v5 => v4
def MethodDescriptorProto.set_clientStreaming (orig: MethodDescriptorProto) (val: (Bool))
  : MethodDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 => MethodDescriptorProto.mk v0 v1 v2 v3 val v5
def MethodDescriptorProto.serverStreaming : MethodDescriptorProto → (Bool)
| mk v0 v1 v2 v3 v4 v5 => v5
def MethodDescriptorProto.set_serverStreaming (orig: MethodDescriptorProto) (val: (Bool))
  : MethodDescriptorProto := match orig with
| mk v0 v1 v2 v3 v4 v5 => MethodDescriptorProto.mk v0 v1 v2 v3 v4 val
def FileOptions.mkDefault : FileOptions := 
  FileOptions.mk arbitrary arbitrary (false) arbitrary (false) FileOptions_OptimizeMode.SPEED arbitrary (false) (false) (false) (false) (false) (true) arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary
instance : Inhabited FileOptions where 
  default := FileOptions.mkDefault
def FileOptions.javaPackage : FileOptions → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v0
def FileOptions.set_javaPackage (orig: FileOptions) (val: (String))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk val v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.javaOuterClassname : FileOptions → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v1
def FileOptions.set_javaOuterClassname (orig: FileOptions) (val: (String))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 val v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.javaMultipleFiles : FileOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v2
def FileOptions.set_javaMultipleFiles (orig: FileOptions) (val: (Bool))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 val v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.javaGenerateEqualsAndHash : FileOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v3
def FileOptions.set_javaGenerateEqualsAndHash (orig: FileOptions) (val: (Bool))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 val v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.javaStringCheckUtf8 : FileOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v4
def FileOptions.set_javaStringCheckUtf8 (orig: FileOptions) (val: (Bool))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 val v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.optimizeFor : FileOptions → (FileOptions_OptimizeMode)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v5
def FileOptions.set_optimizeFor (orig: FileOptions) (val: (FileOptions_OptimizeMode))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 val v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.goPackage : FileOptions → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v6
def FileOptions.set_goPackage (orig: FileOptions) (val: (String))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 val v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.ccGenericServices : FileOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v7
def FileOptions.set_ccGenericServices (orig: FileOptions) (val: (Bool))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 val v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.javaGenericServices : FileOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v8
def FileOptions.set_javaGenericServices (orig: FileOptions) (val: (Bool))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 val v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.pyGenericServices : FileOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v9
def FileOptions.set_pyGenericServices (orig: FileOptions) (val: (Bool))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 val v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.phpGenericServices : FileOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v10
def FileOptions.set_phpGenericServices (orig: FileOptions) (val: (Bool))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 val v11 v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.deprecated : FileOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v11
def FileOptions.set_deprecated (orig: FileOptions) (val: (Bool))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 val v12 v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.ccEnableArenas : FileOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v12
def FileOptions.set_ccEnableArenas (orig: FileOptions) (val: (Bool))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 val v13 v14 v15 v16 v17 v18 v19 v20
def FileOptions.objcClassPrefix : FileOptions → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v13
def FileOptions.set_objcClassPrefix (orig: FileOptions) (val: (String))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 val v14 v15 v16 v17 v18 v19 v20
def FileOptions.csharpNamespace : FileOptions → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v14
def FileOptions.set_csharpNamespace (orig: FileOptions) (val: (String))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 val v15 v16 v17 v18 v19 v20
def FileOptions.swiftPrefix : FileOptions → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v15
def FileOptions.set_swiftPrefix (orig: FileOptions) (val: (String))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 val v16 v17 v18 v19 v20
def FileOptions.phpClassPrefix : FileOptions → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v16
def FileOptions.set_phpClassPrefix (orig: FileOptions) (val: (String))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 val v17 v18 v19 v20
def FileOptions.phpNamespace : FileOptions → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v17
def FileOptions.set_phpNamespace (orig: FileOptions) (val: (String))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 val v18 v19 v20
def FileOptions.phpMetadataNamespace : FileOptions → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v18
def FileOptions.set_phpMetadataNamespace (orig: FileOptions) (val: (String))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 val v19 v20
def FileOptions.rubyPackage : FileOptions → (String)
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v19
def FileOptions.set_rubyPackage (orig: FileOptions) (val: (String))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 val v20
def FileOptions.uninterpretedOption : FileOptions → (Array (UninterpretedOption))
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => v20
def FileOptions.set_uninterpretedOption (orig: FileOptions) (val: (Array (UninterpretedOption)))
  : FileOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 val
def MessageOptions.mkDefault : MessageOptions := 
  MessageOptions.mk (false) (false) (false) arbitrary arbitrary
instance : Inhabited MessageOptions where 
  default := MessageOptions.mkDefault
def MessageOptions.messageSetWireFormat : MessageOptions → (Bool)
| mk v0 v1 v2 v3 v4 => v0
def MessageOptions.set_messageSetWireFormat (orig: MessageOptions) (val: (Bool))
  : MessageOptions := match orig with
| mk v0 v1 v2 v3 v4 => MessageOptions.mk val v1 v2 v3 v4
def MessageOptions.noStandardDescriptorAccessor : MessageOptions → (Bool)
| mk v0 v1 v2 v3 v4 => v1
def MessageOptions.set_noStandardDescriptorAccessor (orig: MessageOptions) (val: (Bool))
  : MessageOptions := match orig with
| mk v0 v1 v2 v3 v4 => MessageOptions.mk v0 val v2 v3 v4
def MessageOptions.deprecated : MessageOptions → (Bool)
| mk v0 v1 v2 v3 v4 => v2
def MessageOptions.set_deprecated (orig: MessageOptions) (val: (Bool))
  : MessageOptions := match orig with
| mk v0 v1 v2 v3 v4 => MessageOptions.mk v0 v1 val v3 v4
def MessageOptions.mapEntry : MessageOptions → (Bool)
| mk v0 v1 v2 v3 v4 => v3
def MessageOptions.set_mapEntry (orig: MessageOptions) (val: (Bool))
  : MessageOptions := match orig with
| mk v0 v1 v2 v3 v4 => MessageOptions.mk v0 v1 v2 val v4
def MessageOptions.uninterpretedOption : MessageOptions → (Array (UninterpretedOption))
| mk v0 v1 v2 v3 v4 => v4
def MessageOptions.set_uninterpretedOption (orig: MessageOptions) (val: (Array (UninterpretedOption)))
  : MessageOptions := match orig with
| mk v0 v1 v2 v3 v4 => MessageOptions.mk v0 v1 v2 v3 val
def FieldOptions.mkDefault : FieldOptions := 
  FieldOptions.mk FieldOptions_CType.STRING (true) FieldOptions_JSType.JS_NORMAL (false) (false) (false) arbitrary
instance : Inhabited FieldOptions where 
  default := FieldOptions.mkDefault
def FieldOptions.ctype : FieldOptions → (FieldOptions_CType)
| mk v0 v1 v2 v3 v4 v5 v6 => v0
def FieldOptions.set_ctype (orig: FieldOptions) (val: (FieldOptions_CType))
  : FieldOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => FieldOptions.mk val v1 v2 v3 v4 v5 v6
def FieldOptions.packed : FieldOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 => v1
def FieldOptions.set_packed (orig: FieldOptions) (val: (Bool))
  : FieldOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => FieldOptions.mk v0 val v2 v3 v4 v5 v6
def FieldOptions.jstype : FieldOptions → (FieldOptions_JSType)
| mk v0 v1 v2 v3 v4 v5 v6 => v2
def FieldOptions.set_jstype (orig: FieldOptions) (val: (FieldOptions_JSType))
  : FieldOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => FieldOptions.mk v0 v1 val v3 v4 v5 v6
def FieldOptions.lazy : FieldOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 => v3
def FieldOptions.set_lazy (orig: FieldOptions) (val: (Bool))
  : FieldOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => FieldOptions.mk v0 v1 v2 val v4 v5 v6
def FieldOptions.deprecated : FieldOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 => v4
def FieldOptions.set_deprecated (orig: FieldOptions) (val: (Bool))
  : FieldOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => FieldOptions.mk v0 v1 v2 v3 val v5 v6
def FieldOptions.weak : FieldOptions → (Bool)
| mk v0 v1 v2 v3 v4 v5 v6 => v5
def FieldOptions.set_weak (orig: FieldOptions) (val: (Bool))
  : FieldOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => FieldOptions.mk v0 v1 v2 v3 v4 val v6
def FieldOptions.uninterpretedOption : FieldOptions → (Array (UninterpretedOption))
| mk v0 v1 v2 v3 v4 v5 v6 => v6
def FieldOptions.set_uninterpretedOption (orig: FieldOptions) (val: (Array (UninterpretedOption)))
  : FieldOptions := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => FieldOptions.mk v0 v1 v2 v3 v4 v5 val
def OneofOptions.mkDefault : OneofOptions := 
  OneofOptions.mk arbitrary
instance : Inhabited OneofOptions where 
  default := OneofOptions.mkDefault
def OneofOptions.uninterpretedOption : OneofOptions → (Array (UninterpretedOption))
| mk v0 => v0
def OneofOptions.set_uninterpretedOption (orig: OneofOptions) (val: (Array (UninterpretedOption)))
  : OneofOptions := match orig with
| mk v0 => OneofOptions.mk val
def EnumOptions.mkDefault : EnumOptions := 
  EnumOptions.mk arbitrary (false) arbitrary
instance : Inhabited EnumOptions where 
  default := EnumOptions.mkDefault
def EnumOptions.allowAlias : EnumOptions → (Bool)
| mk v0 v1 v2 => v0
def EnumOptions.set_allowAlias (orig: EnumOptions) (val: (Bool))
  : EnumOptions := match orig with
| mk v0 v1 v2 => EnumOptions.mk val v1 v2
def EnumOptions.deprecated : EnumOptions → (Bool)
| mk v0 v1 v2 => v1
def EnumOptions.set_deprecated (orig: EnumOptions) (val: (Bool))
  : EnumOptions := match orig with
| mk v0 v1 v2 => EnumOptions.mk v0 val v2
def EnumOptions.uninterpretedOption : EnumOptions → (Array (UninterpretedOption))
| mk v0 v1 v2 => v2
def EnumOptions.set_uninterpretedOption (orig: EnumOptions) (val: (Array (UninterpretedOption)))
  : EnumOptions := match orig with
| mk v0 v1 v2 => EnumOptions.mk v0 v1 val
def EnumValueOptions.mkDefault : EnumValueOptions := 
  EnumValueOptions.mk (false) arbitrary
instance : Inhabited EnumValueOptions where 
  default := EnumValueOptions.mkDefault
def EnumValueOptions.deprecated : EnumValueOptions → (Bool)
| mk v0 v1 => v0
def EnumValueOptions.set_deprecated (orig: EnumValueOptions) (val: (Bool))
  : EnumValueOptions := match orig with
| mk v0 v1 => EnumValueOptions.mk val v1
def EnumValueOptions.uninterpretedOption : EnumValueOptions → (Array (UninterpretedOption))
| mk v0 v1 => v1
def EnumValueOptions.set_uninterpretedOption (orig: EnumValueOptions) (val: (Array (UninterpretedOption)))
  : EnumValueOptions := match orig with
| mk v0 v1 => EnumValueOptions.mk v0 val
def ServiceOptions.mkDefault : ServiceOptions := 
  ServiceOptions.mk (false) arbitrary
instance : Inhabited ServiceOptions where 
  default := ServiceOptions.mkDefault
def ServiceOptions.deprecated : ServiceOptions → (Bool)
| mk v0 v1 => v0
def ServiceOptions.set_deprecated (orig: ServiceOptions) (val: (Bool))
  : ServiceOptions := match orig with
| mk v0 v1 => ServiceOptions.mk val v1
def ServiceOptions.uninterpretedOption : ServiceOptions → (Array (UninterpretedOption))
| mk v0 v1 => v1
def ServiceOptions.set_uninterpretedOption (orig: ServiceOptions) (val: (Array (UninterpretedOption)))
  : ServiceOptions := match orig with
| mk v0 v1 => ServiceOptions.mk v0 val
def MethodOptions.mkDefault : MethodOptions := 
  MethodOptions.mk (false) MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN arbitrary
instance : Inhabited MethodOptions where 
  default := MethodOptions.mkDefault
def MethodOptions.deprecated : MethodOptions → (Bool)
| mk v0 v1 v2 => v0
def MethodOptions.set_deprecated (orig: MethodOptions) (val: (Bool))
  : MethodOptions := match orig with
| mk v0 v1 v2 => MethodOptions.mk val v1 v2
def MethodOptions.idempotencyLevel : MethodOptions → (MethodOptions_IdempotencyLevel)
| mk v0 v1 v2 => v1
def MethodOptions.set_idempotencyLevel (orig: MethodOptions) (val: (MethodOptions_IdempotencyLevel))
  : MethodOptions := match orig with
| mk v0 v1 v2 => MethodOptions.mk v0 val v2
def MethodOptions.uninterpretedOption : MethodOptions → (Array (UninterpretedOption))
| mk v0 v1 v2 => v2
def MethodOptions.set_uninterpretedOption (orig: MethodOptions) (val: (Array (UninterpretedOption)))
  : MethodOptions := match orig with
| mk v0 v1 v2 => MethodOptions.mk v0 v1 val
def UninterpretedOption.mkDefault : UninterpretedOption := 
  UninterpretedOption.mk arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary arbitrary
instance : Inhabited UninterpretedOption where 
  default := UninterpretedOption.mkDefault
def UninterpretedOption.name : UninterpretedOption → (Array (UninterpretedOption_NamePart))
| mk v0 v1 v2 v3 v4 v5 v6 => v0
def UninterpretedOption.set_name (orig: UninterpretedOption) (val: (Array (UninterpretedOption_NamePart)))
  : UninterpretedOption := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => UninterpretedOption.mk val v1 v2 v3 v4 v5 v6
def UninterpretedOption.identifierValue : UninterpretedOption → (String)
| mk v0 v1 v2 v3 v4 v5 v6 => v1
def UninterpretedOption.set_identifierValue (orig: UninterpretedOption) (val: (String))
  : UninterpretedOption := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => UninterpretedOption.mk v0 val v2 v3 v4 v5 v6
def UninterpretedOption.positiveIntValue : UninterpretedOption → (Nat)
| mk v0 v1 v2 v3 v4 v5 v6 => v2
def UninterpretedOption.set_positiveIntValue (orig: UninterpretedOption) (val: (Nat))
  : UninterpretedOption := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => UninterpretedOption.mk v0 v1 val v3 v4 v5 v6
def UninterpretedOption.negativeIntValue : UninterpretedOption → (Int)
| mk v0 v1 v2 v3 v4 v5 v6 => v3
def UninterpretedOption.set_negativeIntValue (orig: UninterpretedOption) (val: (Int))
  : UninterpretedOption := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => UninterpretedOption.mk v0 v1 v2 val v4 v5 v6
def UninterpretedOption.doubleValue : UninterpretedOption → (Float)
| mk v0 v1 v2 v3 v4 v5 v6 => v4
def UninterpretedOption.set_doubleValue (orig: UninterpretedOption) (val: (Float))
  : UninterpretedOption := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => UninterpretedOption.mk v0 v1 v2 v3 val v5 v6
def UninterpretedOption.stringValue : UninterpretedOption → (ByteArray)
| mk v0 v1 v2 v3 v4 v5 v6 => v5
def UninterpretedOption.set_stringValue (orig: UninterpretedOption) (val: (ByteArray))
  : UninterpretedOption := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => UninterpretedOption.mk v0 v1 v2 v3 v4 val v6
def UninterpretedOption.aggregateValue : UninterpretedOption → (String)
| mk v0 v1 v2 v3 v4 v5 v6 => v6
def UninterpretedOption.set_aggregateValue (orig: UninterpretedOption) (val: (String))
  : UninterpretedOption := match orig with
| mk v0 v1 v2 v3 v4 v5 v6 => UninterpretedOption.mk v0 v1 v2 v3 v4 v5 val
def UninterpretedOption_NamePart.mkDefault : UninterpretedOption_NamePart := 
  UninterpretedOption_NamePart.mk arbitrary arbitrary
instance : Inhabited UninterpretedOption_NamePart where 
  default := UninterpretedOption_NamePart.mkDefault
def UninterpretedOption_NamePart.namePart : UninterpretedOption_NamePart → (String)
| mk v0 v1 => v0
def UninterpretedOption_NamePart.set_namePart (orig: UninterpretedOption_NamePart) (val: (String))
  : UninterpretedOption_NamePart := match orig with
| mk v0 v1 => UninterpretedOption_NamePart.mk val v1
def UninterpretedOption_NamePart.isExtension : UninterpretedOption_NamePart → (Bool)
| mk v0 v1 => v1
def UninterpretedOption_NamePart.set_isExtension (orig: UninterpretedOption_NamePart) (val: (Bool))
  : UninterpretedOption_NamePart := match orig with
| mk v0 v1 => UninterpretedOption_NamePart.mk v0 val
def SourceCodeInfo.mkDefault : SourceCodeInfo := 
  SourceCodeInfo.mk arbitrary
instance : Inhabited SourceCodeInfo where 
  default := SourceCodeInfo.mkDefault
def SourceCodeInfo.location : SourceCodeInfo → (Array (SourceCodeInfo_Location))
| mk v0 => v0
def SourceCodeInfo.set_location (orig: SourceCodeInfo) (val: (Array (SourceCodeInfo_Location)))
  : SourceCodeInfo := match orig with
| mk v0 => SourceCodeInfo.mk val
def SourceCodeInfo_Location.mkDefault : SourceCodeInfo_Location := 
  SourceCodeInfo_Location.mk arbitrary arbitrary arbitrary arbitrary arbitrary
instance : Inhabited SourceCodeInfo_Location where 
  default := SourceCodeInfo_Location.mkDefault
def SourceCodeInfo_Location.path : SourceCodeInfo_Location → (Array (Int))
| mk v0 v1 v2 v3 v4 => v0
def SourceCodeInfo_Location.set_path (orig: SourceCodeInfo_Location) (val: (Array (Int)))
  : SourceCodeInfo_Location := match orig with
| mk v0 v1 v2 v3 v4 => SourceCodeInfo_Location.mk val v1 v2 v3 v4
def SourceCodeInfo_Location.span : SourceCodeInfo_Location → (Array (Int))
| mk v0 v1 v2 v3 v4 => v1
def SourceCodeInfo_Location.set_span (orig: SourceCodeInfo_Location) (val: (Array (Int)))
  : SourceCodeInfo_Location := match orig with
| mk v0 v1 v2 v3 v4 => SourceCodeInfo_Location.mk v0 val v2 v3 v4
def SourceCodeInfo_Location.leadingComments : SourceCodeInfo_Location → (String)
| mk v0 v1 v2 v3 v4 => v2
def SourceCodeInfo_Location.set_leadingComments (orig: SourceCodeInfo_Location) (val: (String))
  : SourceCodeInfo_Location := match orig with
| mk v0 v1 v2 v3 v4 => SourceCodeInfo_Location.mk v0 v1 val v3 v4
def SourceCodeInfo_Location.trailingComments : SourceCodeInfo_Location → (String)
| mk v0 v1 v2 v3 v4 => v3
def SourceCodeInfo_Location.set_trailingComments (orig: SourceCodeInfo_Location) (val: (String))
  : SourceCodeInfo_Location := match orig with
| mk v0 v1 v2 v3 v4 => SourceCodeInfo_Location.mk v0 v1 v2 val v4
def SourceCodeInfo_Location.leadingDetachedComments : SourceCodeInfo_Location → (Array (String))
| mk v0 v1 v2 v3 v4 => v4
def SourceCodeInfo_Location.set_leadingDetachedComments (orig: SourceCodeInfo_Location) (val: (Array (String)))
  : SourceCodeInfo_Location := match orig with
| mk v0 v1 v2 v3 v4 => SourceCodeInfo_Location.mk v0 v1 v2 v3 val
def GeneratedCodeInfo.mkDefault : GeneratedCodeInfo := 
  GeneratedCodeInfo.mk arbitrary
instance : Inhabited GeneratedCodeInfo where 
  default := GeneratedCodeInfo.mkDefault
def GeneratedCodeInfo.annotation : GeneratedCodeInfo → (Array (GeneratedCodeInfo_Annotation))
| mk v0 => v0
def GeneratedCodeInfo.set_annotation (orig: GeneratedCodeInfo) (val: (Array (GeneratedCodeInfo_Annotation)))
  : GeneratedCodeInfo := match orig with
| mk v0 => GeneratedCodeInfo.mk val
def GeneratedCodeInfo_Annotation.mkDefault : GeneratedCodeInfo_Annotation := 
  GeneratedCodeInfo_Annotation.mk arbitrary arbitrary arbitrary arbitrary
instance : Inhabited GeneratedCodeInfo_Annotation where 
  default := GeneratedCodeInfo_Annotation.mkDefault
def GeneratedCodeInfo_Annotation.path : GeneratedCodeInfo_Annotation → (Array (Int))
| mk v0 v1 v2 v3 => v0
def GeneratedCodeInfo_Annotation.set_path (orig: GeneratedCodeInfo_Annotation) (val: (Array (Int)))
  : GeneratedCodeInfo_Annotation := match orig with
| mk v0 v1 v2 v3 => GeneratedCodeInfo_Annotation.mk val v1 v2 v3
def GeneratedCodeInfo_Annotation.sourceFile : GeneratedCodeInfo_Annotation → (String)
| mk v0 v1 v2 v3 => v1
def GeneratedCodeInfo_Annotation.set_sourceFile (orig: GeneratedCodeInfo_Annotation) (val: (String))
  : GeneratedCodeInfo_Annotation := match orig with
| mk v0 v1 v2 v3 => GeneratedCodeInfo_Annotation.mk v0 val v2 v3
def GeneratedCodeInfo_Annotation._begin : GeneratedCodeInfo_Annotation → (Int)
| mk v0 v1 v2 v3 => v2
def GeneratedCodeInfo_Annotation.set__begin (orig: GeneratedCodeInfo_Annotation) (val: (Int))
  : GeneratedCodeInfo_Annotation := match orig with
| mk v0 v1 v2 v3 => GeneratedCodeInfo_Annotation.mk v0 v1 val v3
def GeneratedCodeInfo_Annotation._end : GeneratedCodeInfo_Annotation → (Int)
| mk v0 v1 v2 v3 => v3
def GeneratedCodeInfo_Annotation.set__end (orig: GeneratedCodeInfo_Annotation) (val: (Int))
  : GeneratedCodeInfo_Annotation := match orig with
| mk v0 v1 v2 v3 => GeneratedCodeInfo_Annotation.mk v0 v1 v2 val

deriving instance BEq for GeneratedCodeInfo_Annotation, GeneratedCodeInfo, SourceCodeInfo_Location, SourceCodeInfo, UninterpretedOption_NamePart, UninterpretedOption, MethodOptions, ServiceOptions, EnumValueOptions, EnumOptions, OneofOptions, FieldOptions, MessageOptions, FileOptions, MethodDescriptorProto, ServiceDescriptorProto, EnumValueDescriptorProto, EnumDescriptorProto_EnumReservedRange, EnumDescriptorProto, OneofDescriptorProto, FieldDescriptorProto, ExtensionRangeOptions, DescriptorProto_ReservedRange, DescriptorProto_ExtensionRange, DescriptorProto, FileDescriptorProto, FileDescriptorSet

mutual

partial def FileDescriptorSet_deserializeAux (x: FileDescriptorSet) : LeanProto.EncDec.ProtoParseM FileDescriptorSet := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do FileDescriptorSet_deserializeAux (x.set_file (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (FileDescriptorProto_deserializeAux v)) arbitrary) _type) (x.file)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; FileDescriptorSet_deserializeAux x

partial def FileDescriptorProto_deserializeAux (x: FileDescriptorProto) : LeanProto.EncDec.ProtoParseM FileDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do FileDescriptorProto_deserializeAux (x.set_name (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.name)))
| 2 => do FileDescriptorProto_deserializeAux (x.set_package (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.package)))
| 3 => do FileDescriptorProto_deserializeAux (x.set_dependency (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) arbitrary) _type) (x.dependency)))
| 10 => do FileDescriptorProto_deserializeAux (x.set_publicDependency (← (LeanProto.EncDec.parseKeyAndMixedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) arbitrary) _type) (x.publicDependency)))
| 11 => do FileDescriptorProto_deserializeAux (x.set_weakDependency (← (LeanProto.EncDec.parseKeyAndMixedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) arbitrary) _type) (x.weakDependency)))
| 4 => do FileDescriptorProto_deserializeAux (x.set_messageType (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (DescriptorProto_deserializeAux v)) arbitrary) _type) (x.messageType)))
| 5 => do FileDescriptorProto_deserializeAux (x.set_enumType (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (EnumDescriptorProto_deserializeAux v)) arbitrary) _type) (x.enumType)))
| 6 => do FileDescriptorProto_deserializeAux (x.set_service (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (ServiceDescriptorProto_deserializeAux v)) arbitrary) _type) (x.service)))
| 7 => do FileDescriptorProto_deserializeAux (x.set_extension (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (FieldDescriptorProto_deserializeAux v)) arbitrary) _type) (x.extension)))
| 8 => do FileDescriptorProto_deserializeAux (x.set_options (← (fun v => LeanProto.EncDec.parseMessage (FileOptions_deserializeAux v)) (x.options.getD arbitrary)))
| 9 => do FileDescriptorProto_deserializeAux (x.set_sourceCodeInfo (← (fun v => LeanProto.EncDec.parseMessage (SourceCodeInfo_deserializeAux v)) (x.sourceCodeInfo.getD arbitrary)))
| 12 => do FileDescriptorProto_deserializeAux (x.set__syntax (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x._syntax)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; FileDescriptorProto_deserializeAux x

partial def DescriptorProto_deserializeAux (x: DescriptorProto) : LeanProto.EncDec.ProtoParseM DescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do DescriptorProto_deserializeAux (x.set_name (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.name)))
| 2 => do DescriptorProto_deserializeAux (x.set_field (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (FieldDescriptorProto_deserializeAux v)) arbitrary) _type) (x.field)))
| 6 => do DescriptorProto_deserializeAux (x.set_extension (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (FieldDescriptorProto_deserializeAux v)) arbitrary) _type) (x.extension)))
| 3 => do DescriptorProto_deserializeAux (x.set_nestedType (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (DescriptorProto_deserializeAux v)) arbitrary) _type) (x.nestedType)))
| 4 => do DescriptorProto_deserializeAux (x.set_enumType (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (EnumDescriptorProto_deserializeAux v)) arbitrary) _type) (x.enumType)))
| 5 => do DescriptorProto_deserializeAux (x.set_extensionRange (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (DescriptorProto_ExtensionRange_deserializeAux v)) arbitrary) _type) (x.extensionRange)))
| 8 => do DescriptorProto_deserializeAux (x.set_oneofDecl (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (OneofDescriptorProto_deserializeAux v)) arbitrary) _type) (x.oneofDecl)))
| 7 => do DescriptorProto_deserializeAux (x.set_options (← (fun v => LeanProto.EncDec.parseMessage (MessageOptions_deserializeAux v)) (x.options.getD arbitrary)))
| 9 => do DescriptorProto_deserializeAux (x.set_reservedRange (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (DescriptorProto_ReservedRange_deserializeAux v)) arbitrary) _type) (x.reservedRange)))
| 10 => do DescriptorProto_deserializeAux (x.set_reservedName (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) arbitrary) _type) (x.reservedName)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; DescriptorProto_deserializeAux x

partial def DescriptorProto_ExtensionRange_deserializeAux (x: DescriptorProto_ExtensionRange) : LeanProto.EncDec.ProtoParseM DescriptorProto_ExtensionRange := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do DescriptorProto_ExtensionRange_deserializeAux (x.set_start (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x.start)))
| 2 => do DescriptorProto_ExtensionRange_deserializeAux (x.set__end (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x._end)))
| 3 => do DescriptorProto_ExtensionRange_deserializeAux (x.set_options (← (fun v => LeanProto.EncDec.parseMessage (ExtensionRangeOptions_deserializeAux v)) (x.options.getD arbitrary)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; DescriptorProto_ExtensionRange_deserializeAux x

partial def DescriptorProto_ReservedRange_deserializeAux (x: DescriptorProto_ReservedRange) : LeanProto.EncDec.ProtoParseM DescriptorProto_ReservedRange := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do DescriptorProto_ReservedRange_deserializeAux (x.set_start (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x.start)))
| 2 => do DescriptorProto_ReservedRange_deserializeAux (x.set__end (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x._end)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; DescriptorProto_ReservedRange_deserializeAux x

partial def ExtensionRangeOptions_deserializeAux (x: ExtensionRangeOptions) : LeanProto.EncDec.ProtoParseM ExtensionRangeOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 999 => do ExtensionRangeOptions_deserializeAux (x.set_uninterpretedOption (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (UninterpretedOption_deserializeAux v)) arbitrary) _type) (x.uninterpretedOption)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; ExtensionRangeOptions_deserializeAux x

partial def FieldDescriptorProto_deserializeAux (x: FieldDescriptorProto) : LeanProto.EncDec.ProtoParseM FieldDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do FieldDescriptorProto_deserializeAux (x.set_name (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.name)))
| 3 => do FieldDescriptorProto_deserializeAux (x.set_number (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x.number)))
| 4 => do FieldDescriptorProto_deserializeAux (x.set_label (← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.parseEnum (α:=FieldDescriptorProto_Label))) (x.label)))
| 5 => do FieldDescriptorProto_deserializeAux (x.set_type (← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.parseEnum (α:=FieldDescriptorProto_Type))) (x.type)))
| 6 => do FieldDescriptorProto_deserializeAux (x.set_typeName (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.typeName)))
| 2 => do FieldDescriptorProto_deserializeAux (x.set_extendee (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.extendee)))
| 7 => do FieldDescriptorProto_deserializeAux (x.set_defaultValue (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.defaultValue)))
| 9 => do FieldDescriptorProto_deserializeAux (x.set_oneofIndex (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x.oneofIndex)))
| 10 => do FieldDescriptorProto_deserializeAux (x.set_jsonName (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.jsonName)))
| 8 => do FieldDescriptorProto_deserializeAux (x.set_options (← (fun v => LeanProto.EncDec.parseMessage (FieldOptions_deserializeAux v)) (x.options.getD arbitrary)))
| 17 => do FieldDescriptorProto_deserializeAux (x.set_proto3Optional (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.proto3Optional)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; FieldDescriptorProto_deserializeAux x

partial def OneofDescriptorProto_deserializeAux (x: OneofDescriptorProto) : LeanProto.EncDec.ProtoParseM OneofDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do OneofDescriptorProto_deserializeAux (x.set_name (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.name)))
| 2 => do OneofDescriptorProto_deserializeAux (x.set_options (← (fun v => LeanProto.EncDec.parseMessage (OneofOptions_deserializeAux v)) (x.options.getD arbitrary)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; OneofDescriptorProto_deserializeAux x

partial def EnumDescriptorProto_deserializeAux (x: EnumDescriptorProto) : LeanProto.EncDec.ProtoParseM EnumDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do EnumDescriptorProto_deserializeAux (x.set_name (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.name)))
| 2 => do EnumDescriptorProto_deserializeAux (x.set_value (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (EnumValueDescriptorProto_deserializeAux v)) arbitrary) _type) (x.value)))
| 3 => do EnumDescriptorProto_deserializeAux (x.set_options (← (fun v => LeanProto.EncDec.parseMessage (EnumOptions_deserializeAux v)) (x.options.getD arbitrary)))
| 4 => do EnumDescriptorProto_deserializeAux (x.set_reservedRange (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (EnumDescriptorProto_EnumReservedRange_deserializeAux v)) arbitrary) _type) (x.reservedRange)))
| 5 => do EnumDescriptorProto_deserializeAux (x.set_reservedName (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) arbitrary) _type) (x.reservedName)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; EnumDescriptorProto_deserializeAux x

partial def EnumDescriptorProto_EnumReservedRange_deserializeAux (x: EnumDescriptorProto_EnumReservedRange) : LeanProto.EncDec.ProtoParseM EnumDescriptorProto_EnumReservedRange := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do EnumDescriptorProto_EnumReservedRange_deserializeAux (x.set_start (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x.start)))
| 2 => do EnumDescriptorProto_EnumReservedRange_deserializeAux (x.set__end (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x._end)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; EnumDescriptorProto_EnumReservedRange_deserializeAux x

partial def EnumValueDescriptorProto_deserializeAux (x: EnumValueDescriptorProto) : LeanProto.EncDec.ProtoParseM EnumValueDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do EnumValueDescriptorProto_deserializeAux (x.set_name (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.name)))
| 2 => do EnumValueDescriptorProto_deserializeAux (x.set_number (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x.number)))
| 3 => do EnumValueDescriptorProto_deserializeAux (x.set_options (← (fun v => LeanProto.EncDec.parseMessage (EnumValueOptions_deserializeAux v)) (x.options.getD arbitrary)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; EnumValueDescriptorProto_deserializeAux x

partial def ServiceDescriptorProto_deserializeAux (x: ServiceDescriptorProto) : LeanProto.EncDec.ProtoParseM ServiceDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do ServiceDescriptorProto_deserializeAux (x.set_name (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.name)))
| 2 => do ServiceDescriptorProto_deserializeAux (x.set_method (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (MethodDescriptorProto_deserializeAux v)) arbitrary) _type) (x.method)))
| 3 => do ServiceDescriptorProto_deserializeAux (x.set_options (← (fun v => LeanProto.EncDec.parseMessage (ServiceOptions_deserializeAux v)) (x.options.getD arbitrary)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; ServiceDescriptorProto_deserializeAux x

partial def MethodDescriptorProto_deserializeAux (x: MethodDescriptorProto) : LeanProto.EncDec.ProtoParseM MethodDescriptorProto := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do MethodDescriptorProto_deserializeAux (x.set_name (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.name)))
| 2 => do MethodDescriptorProto_deserializeAux (x.set_inputType (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.inputType)))
| 3 => do MethodDescriptorProto_deserializeAux (x.set_outputType (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.outputType)))
| 4 => do MethodDescriptorProto_deserializeAux (x.set_options (← (fun v => LeanProto.EncDec.parseMessage (MethodOptions_deserializeAux v)) (x.options.getD arbitrary)))
| 5 => do MethodDescriptorProto_deserializeAux (x.set_clientStreaming (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.clientStreaming)))
| 6 => do MethodDescriptorProto_deserializeAux (x.set_serverStreaming (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.serverStreaming)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; MethodDescriptorProto_deserializeAux x

partial def FileOptions_deserializeAux (x: FileOptions) : LeanProto.EncDec.ProtoParseM FileOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do FileOptions_deserializeAux (x.set_javaPackage (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.javaPackage)))
| 8 => do FileOptions_deserializeAux (x.set_javaOuterClassname (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.javaOuterClassname)))
| 10 => do FileOptions_deserializeAux (x.set_javaMultipleFiles (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.javaMultipleFiles)))
| 20 => do FileOptions_deserializeAux (x.set_javaGenerateEqualsAndHash (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.javaGenerateEqualsAndHash)))
| 27 => do FileOptions_deserializeAux (x.set_javaStringCheckUtf8 (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.javaStringCheckUtf8)))
| 9 => do FileOptions_deserializeAux (x.set_optimizeFor (← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.parseEnum (α:=FileOptions_OptimizeMode))) (x.optimizeFor)))
| 11 => do FileOptions_deserializeAux (x.set_goPackage (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.goPackage)))
| 16 => do FileOptions_deserializeAux (x.set_ccGenericServices (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.ccGenericServices)))
| 17 => do FileOptions_deserializeAux (x.set_javaGenericServices (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.javaGenericServices)))
| 18 => do FileOptions_deserializeAux (x.set_pyGenericServices (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.pyGenericServices)))
| 42 => do FileOptions_deserializeAux (x.set_phpGenericServices (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.phpGenericServices)))
| 23 => do FileOptions_deserializeAux (x.set_deprecated (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.deprecated)))
| 31 => do FileOptions_deserializeAux (x.set_ccEnableArenas (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.ccEnableArenas)))
| 36 => do FileOptions_deserializeAux (x.set_objcClassPrefix (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.objcClassPrefix)))
| 37 => do FileOptions_deserializeAux (x.set_csharpNamespace (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.csharpNamespace)))
| 39 => do FileOptions_deserializeAux (x.set_swiftPrefix (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.swiftPrefix)))
| 40 => do FileOptions_deserializeAux (x.set_phpClassPrefix (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.phpClassPrefix)))
| 41 => do FileOptions_deserializeAux (x.set_phpNamespace (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.phpNamespace)))
| 44 => do FileOptions_deserializeAux (x.set_phpMetadataNamespace (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.phpMetadataNamespace)))
| 45 => do FileOptions_deserializeAux (x.set_rubyPackage (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.rubyPackage)))
| 999 => do FileOptions_deserializeAux (x.set_uninterpretedOption (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (UninterpretedOption_deserializeAux v)) arbitrary) _type) (x.uninterpretedOption)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; FileOptions_deserializeAux x

partial def MessageOptions_deserializeAux (x: MessageOptions) : LeanProto.EncDec.ProtoParseM MessageOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do MessageOptions_deserializeAux (x.set_messageSetWireFormat (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.messageSetWireFormat)))
| 2 => do MessageOptions_deserializeAux (x.set_noStandardDescriptorAccessor (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.noStandardDescriptorAccessor)))
| 3 => do MessageOptions_deserializeAux (x.set_deprecated (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.deprecated)))
| 7 => do MessageOptions_deserializeAux (x.set_mapEntry (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.mapEntry)))
| 999 => do MessageOptions_deserializeAux (x.set_uninterpretedOption (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (UninterpretedOption_deserializeAux v)) arbitrary) _type) (x.uninterpretedOption)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; MessageOptions_deserializeAux x

partial def FieldOptions_deserializeAux (x: FieldOptions) : LeanProto.EncDec.ProtoParseM FieldOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do FieldOptions_deserializeAux (x.set_ctype (← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.parseEnum (α:=FieldOptions_CType))) (x.ctype)))
| 2 => do FieldOptions_deserializeAux (x.set_packed (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.packed)))
| 6 => do FieldOptions_deserializeAux (x.set_jstype (← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.parseEnum (α:=FieldOptions_JSType))) (x.jstype)))
| 5 => do FieldOptions_deserializeAux (x.set_lazy (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.lazy)))
| 3 => do FieldOptions_deserializeAux (x.set_deprecated (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.deprecated)))
| 10 => do FieldOptions_deserializeAux (x.set_weak (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.weak)))
| 999 => do FieldOptions_deserializeAux (x.set_uninterpretedOption (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (UninterpretedOption_deserializeAux v)) arbitrary) _type) (x.uninterpretedOption)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; FieldOptions_deserializeAux x

partial def OneofOptions_deserializeAux (x: OneofOptions) : LeanProto.EncDec.ProtoParseM OneofOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 999 => do OneofOptions_deserializeAux (x.set_uninterpretedOption (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (UninterpretedOption_deserializeAux v)) arbitrary) _type) (x.uninterpretedOption)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; OneofOptions_deserializeAux x

partial def EnumOptions_deserializeAux (x: EnumOptions) : LeanProto.EncDec.ProtoParseM EnumOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 2 => do EnumOptions_deserializeAux (x.set_allowAlias (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.allowAlias)))
| 3 => do EnumOptions_deserializeAux (x.set_deprecated (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.deprecated)))
| 999 => do EnumOptions_deserializeAux (x.set_uninterpretedOption (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (UninterpretedOption_deserializeAux v)) arbitrary) _type) (x.uninterpretedOption)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; EnumOptions_deserializeAux x

partial def EnumValueOptions_deserializeAux (x: EnumValueOptions) : LeanProto.EncDec.ProtoParseM EnumValueOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do EnumValueOptions_deserializeAux (x.set_deprecated (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.deprecated)))
| 999 => do EnumValueOptions_deserializeAux (x.set_uninterpretedOption (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (UninterpretedOption_deserializeAux v)) arbitrary) _type) (x.uninterpretedOption)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; EnumValueOptions_deserializeAux x

partial def ServiceOptions_deserializeAux (x: ServiceOptions) : LeanProto.EncDec.ProtoParseM ServiceOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 33 => do ServiceOptions_deserializeAux (x.set_deprecated (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.deprecated)))
| 999 => do ServiceOptions_deserializeAux (x.set_uninterpretedOption (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (UninterpretedOption_deserializeAux v)) arbitrary) _type) (x.uninterpretedOption)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; ServiceOptions_deserializeAux x

partial def MethodOptions_deserializeAux (x: MethodOptions) : LeanProto.EncDec.ProtoParseM MethodOptions := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 33 => do MethodOptions_deserializeAux (x.set_deprecated (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.deprecated)))
| 34 => do MethodOptions_deserializeAux (x.set_idempotencyLevel (← (LeanProto.EncDec.withIgnoredState (LeanProto.EncDec.parseEnum (α:=MethodOptions_IdempotencyLevel))) (x.idempotencyLevel)))
| 999 => do MethodOptions_deserializeAux (x.set_uninterpretedOption (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (UninterpretedOption_deserializeAux v)) arbitrary) _type) (x.uninterpretedOption)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; MethodOptions_deserializeAux x

partial def UninterpretedOption_deserializeAux (x: UninterpretedOption) : LeanProto.EncDec.ProtoParseM UninterpretedOption := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 2 => do UninterpretedOption_deserializeAux (x.set_name (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (UninterpretedOption_NamePart_deserializeAux v)) arbitrary) _type) (x.name)))
| 3 => do UninterpretedOption_deserializeAux (x.set_identifierValue (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.identifierValue)))
| 4 => do UninterpretedOption_deserializeAux (x.set_positiveIntValue (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseUInt64AsNat) (x.positiveIntValue)))
| 5 => do UninterpretedOption_deserializeAux (x.set_negativeIntValue (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt64AsInt) (x.negativeIntValue)))
| 6 => do UninterpretedOption_deserializeAux (x.set_doubleValue (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseFloat64AsFloat) (x.doubleValue)))
| 7 => do UninterpretedOption_deserializeAux (x.set_stringValue (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseByteArray) (x.stringValue)))
| 8 => do UninterpretedOption_deserializeAux (x.set_aggregateValue (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.aggregateValue)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; UninterpretedOption_deserializeAux x

partial def UninterpretedOption_NamePart_deserializeAux (x: UninterpretedOption_NamePart) : LeanProto.EncDec.ProtoParseM UninterpretedOption_NamePart := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do UninterpretedOption_NamePart_deserializeAux (x.set_namePart (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.namePart)))
| 2 => do UninterpretedOption_NamePart_deserializeAux (x.set_isExtension (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseBool) (x.isExtension)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; UninterpretedOption_NamePart_deserializeAux x

partial def SourceCodeInfo_deserializeAux (x: SourceCodeInfo) : LeanProto.EncDec.ProtoParseM SourceCodeInfo := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do SourceCodeInfo_deserializeAux (x.set_location (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (SourceCodeInfo_Location_deserializeAux v)) arbitrary) _type) (x.location)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; SourceCodeInfo_deserializeAux x

partial def SourceCodeInfo_Location_deserializeAux (x: SourceCodeInfo_Location) : LeanProto.EncDec.ProtoParseM SourceCodeInfo_Location := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do SourceCodeInfo_Location_deserializeAux (x.set_path (← (LeanProto.EncDec.parseKeyAndMixedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) arbitrary) _type) (x.path)))
| 2 => do SourceCodeInfo_Location_deserializeAux (x.set_span (← (LeanProto.EncDec.parseKeyAndMixedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) arbitrary) _type) (x.span)))
| 3 => do SourceCodeInfo_Location_deserializeAux (x.set_leadingComments (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.leadingComments)))
| 4 => do SourceCodeInfo_Location_deserializeAux (x.set_trailingComments (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.trailingComments)))
| 6 => do SourceCodeInfo_Location_deserializeAux (x.set_leadingDetachedComments (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) arbitrary) _type) (x.leadingDetachedComments)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; SourceCodeInfo_Location_deserializeAux x

partial def GeneratedCodeInfo_deserializeAux (x: GeneratedCodeInfo) : LeanProto.EncDec.ProtoParseM GeneratedCodeInfo := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do GeneratedCodeInfo_deserializeAux (x.set_annotation (← (LeanProto.EncDec.parseKeyAndNonPackedArray ((fun v => LeanProto.EncDec.parseMessage (GeneratedCodeInfo_Annotation_deserializeAux v)) arbitrary) _type) (x.annotation)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; GeneratedCodeInfo_deserializeAux x

partial def GeneratedCodeInfo_Annotation_deserializeAux (x: GeneratedCodeInfo_Annotation) : LeanProto.EncDec.ProtoParseM GeneratedCodeInfo_Annotation := do
  if (← LeanProto.EncDec.done) then return x
  let (_type, key) ← LeanProto.EncDec.parseKey
  match key with
| 1 => do GeneratedCodeInfo_Annotation_deserializeAux (x.set_path (← (LeanProto.EncDec.parseKeyAndMixedArray ((LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) arbitrary) _type) (x.path)))
| 2 => do GeneratedCodeInfo_Annotation_deserializeAux (x.set_sourceFile (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseString) (x.sourceFile)))
| 3 => do GeneratedCodeInfo_Annotation_deserializeAux (x.set__begin (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x._begin)))
| 4 => do GeneratedCodeInfo_Annotation_deserializeAux (x.set__end (← (LeanProto.EncDec.withIgnoredState LeanProto.EncDec.parseInt32AsInt) (x._end)))
| 0 => do throw $ IO.userError "Decoding message with field number 0"
| _ => do let _ ← LeanProto.EncDec.parseUnknown _type; GeneratedCodeInfo_Annotation_deserializeAux x


end



mutual

partial def FileDescriptorSet_serializeAux : FileDescriptorSet -> LeanProto.EncDec.ProtoSerAction
| FileDescriptorSet.mk v0 => do
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (FileDescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0

partial def FileDescriptorProto_serializeAux : FileDescriptorProto -> LeanProto.EncDec.ProtoSerAction
| FileDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 2) v1
  (LeanProto.EncDec.serializeUnpackedArrayWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 3) v2
  (LeanProto.EncDec.serializeUnpackedArrayWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 10) v3
  (LeanProto.EncDec.serializeUnpackedArrayWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 11) v4
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (DescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 4) v5
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (EnumDescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 5) v6
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (ServiceDescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 6) v7
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (FieldDescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 7) v8
  LeanProto.EncDec.serializeOpt (LeanProto.EncDec.serializeWithTag ((LeanProto.EncDec.serializeMessage (FileOptions_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 8) v9
  LeanProto.EncDec.serializeOpt (LeanProto.EncDec.serializeWithTag ((LeanProto.EncDec.serializeMessage (SourceCodeInfo_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 9) v10
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 12) v11

partial def DescriptorProto_serializeAux : DescriptorProto -> LeanProto.EncDec.ProtoSerAction
| DescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (FieldDescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 2) v1
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (FieldDescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 6) v2
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (DescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 3) v3
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (EnumDescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 4) v4
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (DescriptorProto_ExtensionRange_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 5) v5
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (OneofDescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 8) v6
  LeanProto.EncDec.serializeOpt (LeanProto.EncDec.serializeWithTag ((LeanProto.EncDec.serializeMessage (MessageOptions_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 7) v7
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (DescriptorProto_ReservedRange_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 9) v8
  (LeanProto.EncDec.serializeUnpackedArrayWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 10) v9

partial def DescriptorProto_ExtensionRange_serializeAux : DescriptorProto_ExtensionRange -> LeanProto.EncDec.ProtoSerAction
| DescriptorProto_ExtensionRange.mk v0 v1 v2 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 2) v1
  LeanProto.EncDec.serializeOpt (LeanProto.EncDec.serializeWithTag ((LeanProto.EncDec.serializeMessage (ExtensionRangeOptions_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 3) v2

partial def DescriptorProto_ReservedRange_serializeAux : DescriptorProto_ReservedRange -> LeanProto.EncDec.ProtoSerAction
| DescriptorProto_ReservedRange.mk v0 v1 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 2) v1

partial def ExtensionRangeOptions_serializeAux : ExtensionRangeOptions -> LeanProto.EncDec.ProtoSerAction
| ExtensionRangeOptions.mk v0 => do
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (UninterpretedOption_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 999) v0

partial def FieldDescriptorProto_serializeAux : FieldDescriptorProto -> LeanProto.EncDec.ProtoSerAction
| FieldDescriptorProto.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 3) v1
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeEnum) (LeanProto.EncDec.WireType.ofLit 0 rfl) 4) v2
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeEnum) (LeanProto.EncDec.WireType.ofLit 0 rfl) 5) v3
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 6) v4
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 2) v5
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 7) v6
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 9) v7
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 10) v8
  LeanProto.EncDec.serializeOpt (LeanProto.EncDec.serializeWithTag ((LeanProto.EncDec.serializeMessage (FieldOptions_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 8) v9
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 17) v10

partial def OneofDescriptorProto_serializeAux : OneofDescriptorProto -> LeanProto.EncDec.ProtoSerAction
| OneofDescriptorProto.mk v0 v1 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0
  LeanProto.EncDec.serializeOpt (LeanProto.EncDec.serializeWithTag ((LeanProto.EncDec.serializeMessage (OneofOptions_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 2) v1

partial def EnumDescriptorProto_serializeAux : EnumDescriptorProto -> LeanProto.EncDec.ProtoSerAction
| EnumDescriptorProto.mk v0 v1 v2 v3 v4 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (EnumValueDescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 2) v1
  LeanProto.EncDec.serializeOpt (LeanProto.EncDec.serializeWithTag ((LeanProto.EncDec.serializeMessage (EnumOptions_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 3) v2
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (EnumDescriptorProto_EnumReservedRange_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 4) v3
  (LeanProto.EncDec.serializeUnpackedArrayWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 5) v4

partial def EnumDescriptorProto_EnumReservedRange_serializeAux : EnumDescriptorProto_EnumReservedRange -> LeanProto.EncDec.ProtoSerAction
| EnumDescriptorProto_EnumReservedRange.mk v0 v1 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 2) v1

partial def EnumValueDescriptorProto_serializeAux : EnumValueDescriptorProto -> LeanProto.EncDec.ProtoSerAction
| EnumValueDescriptorProto.mk v0 v1 v2 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 2) v1
  LeanProto.EncDec.serializeOpt (LeanProto.EncDec.serializeWithTag ((LeanProto.EncDec.serializeMessage (EnumValueOptions_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 3) v2

partial def ServiceDescriptorProto_serializeAux : ServiceDescriptorProto -> LeanProto.EncDec.ProtoSerAction
| ServiceDescriptorProto.mk v0 v1 v2 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (MethodDescriptorProto_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 2) v1
  LeanProto.EncDec.serializeOpt (LeanProto.EncDec.serializeWithTag ((LeanProto.EncDec.serializeMessage (ServiceOptions_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 3) v2

partial def MethodDescriptorProto_serializeAux : MethodDescriptorProto -> LeanProto.EncDec.ProtoSerAction
| MethodDescriptorProto.mk v0 v1 v2 v3 v4 v5 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 2) v1
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 3) v2
  LeanProto.EncDec.serializeOpt (LeanProto.EncDec.serializeWithTag ((LeanProto.EncDec.serializeMessage (MethodOptions_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 4) v3
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 5) v4
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 6) v5

partial def FileOptions_serializeAux : FileOptions -> LeanProto.EncDec.ProtoSerAction
| FileOptions.mk v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 8) v1
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 10) v2
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 20) v3
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 27) v4
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeEnum) (LeanProto.EncDec.WireType.ofLit 0 rfl) 9) v5
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 11) v6
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 16) v7
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 17) v8
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 18) v9
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 42) v10
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 23) v11
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 31) v12
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 36) v13
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 37) v14
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 39) v15
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 40) v16
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 41) v17
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 44) v18
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 45) v19
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (UninterpretedOption_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 999) v20

partial def MessageOptions_serializeAux : MessageOptions -> LeanProto.EncDec.ProtoSerAction
| MessageOptions.mk v0 v1 v2 v3 v4 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 2) v1
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 3) v2
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 7) v3
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (UninterpretedOption_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 999) v4

partial def FieldOptions_serializeAux : FieldOptions -> LeanProto.EncDec.ProtoSerAction
| FieldOptions.mk v0 v1 v2 v3 v4 v5 v6 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeEnum) (LeanProto.EncDec.WireType.ofLit 0 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 2) v1
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeEnum) (LeanProto.EncDec.WireType.ofLit 0 rfl) 6) v2
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 5) v3
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 3) v4
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 10) v5
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (UninterpretedOption_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 999) v6

partial def OneofOptions_serializeAux : OneofOptions -> LeanProto.EncDec.ProtoSerAction
| OneofOptions.mk v0 => do
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (UninterpretedOption_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 999) v0

partial def EnumOptions_serializeAux : EnumOptions -> LeanProto.EncDec.ProtoSerAction
| EnumOptions.mk v0 v1 v2 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 2) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 3) v1
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (UninterpretedOption_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 999) v2

partial def EnumValueOptions_serializeAux : EnumValueOptions -> LeanProto.EncDec.ProtoSerAction
| EnumValueOptions.mk v0 v1 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 1) v0
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (UninterpretedOption_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 999) v1

partial def ServiceOptions_serializeAux : ServiceOptions -> LeanProto.EncDec.ProtoSerAction
| ServiceOptions.mk v0 v1 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 33) v0
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (UninterpretedOption_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 999) v1

partial def MethodOptions_serializeAux : MethodOptions -> LeanProto.EncDec.ProtoSerAction
| MethodOptions.mk v0 v1 v2 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 33) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeEnum) (LeanProto.EncDec.WireType.ofLit 0 rfl) 34) v1
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (UninterpretedOption_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 999) v2

partial def UninterpretedOption_serializeAux : UninterpretedOption -> LeanProto.EncDec.ProtoSerAction
| UninterpretedOption.mk v0 v1 v2 v3 v4 v5 v6 => do
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (UninterpretedOption_NamePart_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 2) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 3) v1
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeNatAsUInt64) (LeanProto.EncDec.WireType.ofLit 0 rfl) 4) v2
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt64) (LeanProto.EncDec.WireType.ofLit 0 rfl) 5) v3
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeFloatAsFloat64) (LeanProto.EncDec.WireType.ofLit 1 rfl) 6) v4
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeByteArray) (LeanProto.EncDec.WireType.ofLit 2 rfl) 7) v5
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 8) v6

partial def UninterpretedOption_NamePart_serializeAux : UninterpretedOption_NamePart -> LeanProto.EncDec.ProtoSerAction
| UninterpretedOption_NamePart.mk v0 v1 => do
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeBool) (LeanProto.EncDec.WireType.ofLit 0 rfl) 2) v1

partial def SourceCodeInfo_serializeAux : SourceCodeInfo -> LeanProto.EncDec.ProtoSerAction
| SourceCodeInfo.mk v0 => do
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (SourceCodeInfo_Location_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0

partial def SourceCodeInfo_Location_serializeAux : SourceCodeInfo_Location -> LeanProto.EncDec.ProtoSerAction
| SourceCodeInfo_Location.mk v0 v1 v2 v3 v4 => do
  (LeanProto.EncDec.serializeIfNonempty (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializePackedArray (LeanProto.EncDec.serializeIntAsInt32)) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1)) v0
  (LeanProto.EncDec.serializeIfNonempty (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializePackedArray (LeanProto.EncDec.serializeIntAsInt32)) (LeanProto.EncDec.WireType.ofLit 2 rfl) 2)) v1
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 3) v2
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 4) v3
  (LeanProto.EncDec.serializeUnpackedArrayWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 6) v4

partial def GeneratedCodeInfo_serializeAux : GeneratedCodeInfo -> LeanProto.EncDec.ProtoSerAction
| GeneratedCodeInfo.mk v0 => do
  (LeanProto.EncDec.serializeUnpackedArrayWithTag ((LeanProto.EncDec.serializeMessage (GeneratedCodeInfo_Annotation_serializeAux))) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1) v0

partial def GeneratedCodeInfo_Annotation_serializeAux : GeneratedCodeInfo_Annotation -> LeanProto.EncDec.ProtoSerAction
| GeneratedCodeInfo_Annotation.mk v0 v1 v2 v3 => do
  (LeanProto.EncDec.serializeIfNonempty (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializePackedArray (LeanProto.EncDec.serializeIntAsInt32)) (LeanProto.EncDec.WireType.ofLit 2 rfl) 1)) v0
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeString) (LeanProto.EncDec.WireType.ofLit 2 rfl) 2) v1
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 3) v2
  LeanProto.EncDec.serializeSkipDefault (LeanProto.EncDec.serializeWithTag (LeanProto.EncDec.serializeIntAsInt32) (LeanProto.EncDec.WireType.ofLit 0 rfl) 4) v3


end


instance : LeanProto.ProtoSerialize FileDescriptorSet where
  serialize x := do
    let res := LeanProto.EncDec.serialize (FileDescriptorSet_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize FileDescriptorSet where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (FileDescriptorSet_deserializeAux (FileDescriptorSet.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize FileDescriptorProto where
  serialize x := do
    let res := LeanProto.EncDec.serialize (FileDescriptorProto_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize FileDescriptorProto where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (FileDescriptorProto_deserializeAux (FileDescriptorProto.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize DescriptorProto where
  serialize x := do
    let res := LeanProto.EncDec.serialize (DescriptorProto_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize DescriptorProto where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (DescriptorProto_deserializeAux (DescriptorProto.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize DescriptorProto_ExtensionRange where
  serialize x := do
    let res := LeanProto.EncDec.serialize (DescriptorProto_ExtensionRange_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize DescriptorProto_ExtensionRange where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (DescriptorProto_ExtensionRange_deserializeAux (DescriptorProto_ExtensionRange.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize DescriptorProto_ReservedRange where
  serialize x := do
    let res := LeanProto.EncDec.serialize (DescriptorProto_ReservedRange_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize DescriptorProto_ReservedRange where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (DescriptorProto_ReservedRange_deserializeAux (DescriptorProto_ReservedRange.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize ExtensionRangeOptions where
  serialize x := do
    let res := LeanProto.EncDec.serialize (ExtensionRangeOptions_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize ExtensionRangeOptions where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (ExtensionRangeOptions_deserializeAux (ExtensionRangeOptions.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize FieldDescriptorProto where
  serialize x := do
    let res := LeanProto.EncDec.serialize (FieldDescriptorProto_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize FieldDescriptorProto where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (FieldDescriptorProto_deserializeAux (FieldDescriptorProto.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize OneofDescriptorProto where
  serialize x := do
    let res := LeanProto.EncDec.serialize (OneofDescriptorProto_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize OneofDescriptorProto where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (OneofDescriptorProto_deserializeAux (OneofDescriptorProto.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize EnumDescriptorProto where
  serialize x := do
    let res := LeanProto.EncDec.serialize (EnumDescriptorProto_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize EnumDescriptorProto where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (EnumDescriptorProto_deserializeAux (EnumDescriptorProto.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize EnumDescriptorProto_EnumReservedRange where
  serialize x := do
    let res := LeanProto.EncDec.serialize (EnumDescriptorProto_EnumReservedRange_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize EnumDescriptorProto_EnumReservedRange where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (EnumDescriptorProto_EnumReservedRange_deserializeAux (EnumDescriptorProto_EnumReservedRange.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize EnumValueDescriptorProto where
  serialize x := do
    let res := LeanProto.EncDec.serialize (EnumValueDescriptorProto_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize EnumValueDescriptorProto where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (EnumValueDescriptorProto_deserializeAux (EnumValueDescriptorProto.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize ServiceDescriptorProto where
  serialize x := do
    let res := LeanProto.EncDec.serialize (ServiceDescriptorProto_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize ServiceDescriptorProto where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (ServiceDescriptorProto_deserializeAux (ServiceDescriptorProto.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize MethodDescriptorProto where
  serialize x := do
    let res := LeanProto.EncDec.serialize (MethodDescriptorProto_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize MethodDescriptorProto where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (MethodDescriptorProto_deserializeAux (MethodDescriptorProto.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize FileOptions where
  serialize x := do
    let res := LeanProto.EncDec.serialize (FileOptions_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize FileOptions where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (FileOptions_deserializeAux (FileOptions.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize MessageOptions where
  serialize x := do
    let res := LeanProto.EncDec.serialize (MessageOptions_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize MessageOptions where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (MessageOptions_deserializeAux (MessageOptions.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize FieldOptions where
  serialize x := do
    let res := LeanProto.EncDec.serialize (FieldOptions_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize FieldOptions where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (FieldOptions_deserializeAux (FieldOptions.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize OneofOptions where
  serialize x := do
    let res := LeanProto.EncDec.serialize (OneofOptions_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize OneofOptions where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (OneofOptions_deserializeAux (OneofOptions.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize EnumOptions where
  serialize x := do
    let res := LeanProto.EncDec.serialize (EnumOptions_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize EnumOptions where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (EnumOptions_deserializeAux (EnumOptions.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize EnumValueOptions where
  serialize x := do
    let res := LeanProto.EncDec.serialize (EnumValueOptions_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize EnumValueOptions where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (EnumValueOptions_deserializeAux (EnumValueOptions.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize ServiceOptions where
  serialize x := do
    let res := LeanProto.EncDec.serialize (ServiceOptions_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize ServiceOptions where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (ServiceOptions_deserializeAux (ServiceOptions.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize MethodOptions where
  serialize x := do
    let res := LeanProto.EncDec.serialize (MethodOptions_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize MethodOptions where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (MethodOptions_deserializeAux (MethodOptions.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize UninterpretedOption where
  serialize x := do
    let res := LeanProto.EncDec.serialize (UninterpretedOption_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize UninterpretedOption where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (UninterpretedOption_deserializeAux (UninterpretedOption.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize UninterpretedOption_NamePart where
  serialize x := do
    let res := LeanProto.EncDec.serialize (UninterpretedOption_NamePart_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize UninterpretedOption_NamePart where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (UninterpretedOption_NamePart_deserializeAux (UninterpretedOption_NamePart.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize SourceCodeInfo where
  serialize x := do
    let res := LeanProto.EncDec.serialize (SourceCodeInfo_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize SourceCodeInfo where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (SourceCodeInfo_deserializeAux (SourceCodeInfo.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize SourceCodeInfo_Location where
  serialize x := do
    let res := LeanProto.EncDec.serialize (SourceCodeInfo_Location_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize SourceCodeInfo_Location where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (SourceCodeInfo_Location_deserializeAux (SourceCodeInfo_Location.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize GeneratedCodeInfo where
  serialize x := do
    let res := LeanProto.EncDec.serialize (GeneratedCodeInfo_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize GeneratedCodeInfo where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (GeneratedCodeInfo_deserializeAux (GeneratedCodeInfo.mkDefault))
    LeanProto.EncDec.resultToExcept res

instance : LeanProto.ProtoSerialize GeneratedCodeInfo_Annotation where
  serialize x := do
    let res := LeanProto.EncDec.serialize (GeneratedCodeInfo_Annotation_serializeAux x)
    LeanProto.EncDec.resultStateToExcept res

instance : LeanProto.ProtoDeserialize GeneratedCodeInfo_Annotation where
  deserialize b :=
    let res := LeanProto.EncDec.parse b (GeneratedCodeInfo_Annotation_deserializeAux (GeneratedCodeInfo_Annotation.mkDefault))
    LeanProto.EncDec.resultToExcept res


end LeanProtocPlugin.Google.Protobuf